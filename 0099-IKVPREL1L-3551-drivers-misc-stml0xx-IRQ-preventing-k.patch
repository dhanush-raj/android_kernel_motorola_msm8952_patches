From 615d324e679e334afb0645a09c6f302294c1c825 Mon Sep 17 00:00:00 2001
From: Daniel Moore <dtmoore@motorola.com>
Date: Mon, 1 Dec 2014 14:33:43 -0600
Subject: [PATCH 099/959] IKVPREL1L-3551:drivers:misc:stml0xx: IRQ preventing
 kernel suspend

Remove wake_lock and wake_unlock calls from stml0xx irq processing.
This was added to prevent the kernel from suspending during spi.

The wake_lock will abort suspend if the interrupt cames in while
the kernel is trying to suspend.

The spi code was already protected by the mutex_lock and
is_suspended flag.  The previous behavior protects the spi calls
and allows suspend to proceed when the work has finished.

Change-Id: I473db6be8854037bfa585c2ead94aafbec6f1258
Signed-off-by: Dan Moore <dtmoore@motorola.com>
Reviewed-on: http://gerrit.mot.com/693787
SLTApproved: Slta Waiver <sltawvr@motorola.com>
Tested-by: Jira Key <jirakey@motorola.com>
Reviewed-by: Robert Wiegand <Robert.P.Wiegand@motorola.com>
Reviewed-by: Jason Jae Hyun Koh <jasonkoh@motorola.com>
Reviewed-by: Igor Kovalenko <igork@motorola.com>
Submit-Approved: Jira Key <jirakey@motorola.com>
---
 drivers/misc/stml0xx/stml0xx_irq.c | 4 ----
 1 file changed, 4 deletions(-)

diff --git a/drivers/misc/stml0xx/stml0xx_irq.c b/drivers/misc/stml0xx/stml0xx_irq.c
index d112fe41581..f88b0370cc4 100644
--- a/drivers/misc/stml0xx/stml0xx_irq.c
+++ b/drivers/misc/stml0xx/stml0xx_irq.c
@@ -38,7 +38,6 @@
 #include <linux/switch.h>
 #include <linux/time.h>
 #include <linux/uaccess.h>
-#include <linux/wakelock.h>
 #include <linux/workqueue.h>
 
 #include <linux/stml0xx.h>
@@ -50,8 +49,6 @@ irqreturn_t stml0xx_isr(int irq, void *dev)
 	if (stml0xx_irq_disable)
 		return IRQ_HANDLED;
 
-	wake_lock(&ps_stml0xx->wakelock);
-
 	queue_work(ps_stml0xx->irq_work_queue, &ps_stml0xx->irq_work);
 	if (ps_stml0xx->irq_wake == -1)
 		queue_work(ps_stml0xx->irq_work_queue,
@@ -310,5 +307,4 @@ EXIT:
 	stml0xx_sleep(ps_stml0xx);
 	/* For now HAE needs events even if the activity is still */
 	mutex_unlock(&ps_stml0xx->lock);
-	wake_unlock(&ps_stml0xx->wakelock);
 }
-- 
2.11.0

