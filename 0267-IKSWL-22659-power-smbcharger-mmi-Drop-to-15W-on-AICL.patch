From cb18ddc04a8fefe48210dd165405d65eba826832 Mon Sep 17 00:00:00 2001
From: Kenny Kessler <kenny.kessler@motorola.com>
Date: Fri, 12 Jun 2015 19:29:16 -0500
Subject: [PATCH 267/959] IKSWL-22659: power: smbcharger-mmi: Drop to 15W on
 AICL

When AICL drops the rate during Parallel Charging AICL
done is fired and things are not fixed casuing cyclical
failures.  To fix this Drop to 15W HVDCP rate when any
AICL drop occurs during Parallel Charging.

Change-Id: I82cf5923382db1d8382b27350979130b2a9616ce
Signed-off-by: Kenny Kessler <kenny.kessler@motorola.com>
Reviewed-on: http://gerrit.mot.com/757093
SME-Granted: SME Approvals Granted
SLTApproved: Slta Waiver <sltawvr@motorola.com>
Tested-by: Jira Key <jirakey@motorola.com>
Reviewed-by: Ravikumar Vembu <raviv@motorola.com>
Reviewed-by: Jason Knopsnyder <jasonk@motorola.com>
Submit-Approved: Jira Key <jirakey@motorola.com>
---
 drivers/power/qpnp-smbcharger-mmi.c | 20 +++++++++++++-------
 1 file changed, 13 insertions(+), 7 deletions(-)

diff --git a/drivers/power/qpnp-smbcharger-mmi.c b/drivers/power/qpnp-smbcharger-mmi.c
index 3b98de012cd..abb547013bd 100644
--- a/drivers/power/qpnp-smbcharger-mmi.c
+++ b/drivers/power/qpnp-smbcharger-mmi.c
@@ -1903,6 +1903,8 @@ static void taper_irq_en(struct smbchg_chip *chip, bool en)
 	mutex_unlock(&chip->taper_irq_lock);
 }
 
+#define HVDCP_ICL_MAX 2600
+#define HVDCP_ICL_TAPER 1600
 static void smbchg_parallel_usb_disable(struct smbchg_chip *chip)
 {
 	int current_max_ma;
@@ -2050,7 +2052,7 @@ static void smbchg_parallel_usb_enable(struct smbchg_chip *chip)
 	pr_smb(PR_STATUS, "Attempting to enable parallel charger\n");
 	min_current_thr_ma = smbchg_get_min_parallel_current_ma(chip);
 	if (min_current_thr_ma <= 0) {
-		pr_smb(PR_STATUS, "parallel charger unavailable for thr: %d\n",
+		pr_warn("parallel charger unavailable for thr: %d\n",
 				min_current_thr_ma);
 		goto disable_parallel;
 	}
@@ -2061,7 +2063,7 @@ static void smbchg_parallel_usb_enable(struct smbchg_chip *chip)
 
 	if (chip->parallel.initial_aicl_ma == 0) {
 		if (current_limit_ma < min_current_thr_ma) {
-			pr_smb(PR_STATUS, "Initial AICL very low: %d < %d\n",
+			pr_warn("Initial AICL very low: %d < %d\n",
 				current_limit_ma, min_current_thr_ma);
 			goto disable_parallel;
 		}
@@ -2084,8 +2086,7 @@ static void smbchg_parallel_usb_enable(struct smbchg_chip *chip)
 
 	if (total_current_ma < chip->parallel.initial_aicl_ma
 			- chip->parallel.allowed_lowering_ma) {
-		pr_smb(PR_STATUS,
-			"Too little total current : %d (%d + %d) < %d - %d\n",
+		pr_warn("Too little total current : %d (%d + %d) < %d - %d\n",
 			total_current_ma,
 			current_limit_ma, parallel_cl_ma,
 			chip->parallel.initial_aicl_ma,
@@ -2134,7 +2135,14 @@ static void smbchg_parallel_usb_enable(struct smbchg_chip *chip)
 	return;
 
 disable_parallel:
-	pr_smb(PR_STATUS, "disabling parallel charger\n");
+	pr_warn("disabling parallel charger\n");
+
+	if (chip->usb_target_current_ma == HVDCP_ICL_MAX) {
+		mutex_lock(&chip->current_change_lock);
+		chip->usb_target_current_ma = HVDCP_ICL_TAPER;
+		mutex_unlock(&chip->current_change_lock);
+	}
+
 	smbchg_parallel_usb_disable(chip);
 }
 
@@ -3445,8 +3453,6 @@ static void smbchg_rate_check(struct smbchg_chip *chip)
 
 }
 
-#define HVDCP_ICL_MAX 3000
-#define HVDCP_ICL_TAPER 1600
 #define UNKNOWN_BATT_TYPE	"Unknown Battery"
 #define LOADING_BATT_TYPE	"Loading Battery Data"
 static void smbchg_external_power_changed(struct power_supply *psy)
-- 
2.11.0

