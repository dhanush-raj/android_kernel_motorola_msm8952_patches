From 30de00b11b74539294b95bffd60f86315948a783 Mon Sep 17 00:00:00 2001
From: Konstantin Makariev <kmakariev@motorola.com>
Date: Wed, 14 Oct 2015 15:32:39 -0500
Subject: [PATCH 371/959] IKSWM-7374 input: synaptics_dsx_i2c: slot handling
 with clip area

Whenever clip area is defined, touch event should first be verified
whether it belongs to that area or not and only then report
corresponding slot status.

Change-Id: Ic135ecb3c3679f45a4ef4f981e3dd133909c4a5a
Signed-off-by: Konstantin Makariev <kmakariev@motorola.com>
Reviewed-on: http://gerrit.mot.com/791865
SME-Granted: SME Approvals Granted
SLTApproved: Slta Waiver <sltawvr@motorola.com>
Tested-by: Jira Key <jirakey@motorola.com>
Reviewed-by: Igor Kovalenko <igork@motorola.com>
Submit-Approved: Jira Key <jirakey@motorola.com>
---
 drivers/input/touchscreen/synaptics_dsx_i2c.c | 28 +++++++++++++--------------
 1 file changed, 13 insertions(+), 15 deletions(-)

diff --git a/drivers/input/touchscreen/synaptics_dsx_i2c.c b/drivers/input/touchscreen/synaptics_dsx_i2c.c
index 138d4fa36e7..1aea1982c29 100644
--- a/drivers/input/touchscreen/synaptics_dsx_i2c.c
+++ b/drivers/input/touchscreen/synaptics_dsx_i2c.c
@@ -3464,11 +3464,6 @@ static int synaptics_rmi4_f12_abs_report(struct synaptics_rmi4_data *rmi4_data,
 	finger_data = (struct f12_d1_type *)reg_data_1->data;
 	for (finger = 0; finger < fingers_to_process; finger++, finger_data++) {
 		finger_status = finger_data->type_and_stylus;
-#ifdef TYPE_B_PROTOCOL
-		input_mt_slot(rmi4_data->input_dev, finger);
-		input_mt_report_slot_state(rmi4_data->input_dev,
-					MT_TOOL_FINGER, finger_status);
-#endif
 		if (finger_status) {
 			x = finger_data->x_lsb | (finger_data->x_msb << 8);
 			y = finger_data->y_lsb | (finger_data->y_msb << 8);
@@ -3492,12 +3487,14 @@ static int synaptics_rmi4_f12_abs_report(struct synaptics_rmi4_data *rmi4_data,
 					dev_dbg(&rmi4_data->i2c_client->dev,
 						"%d,%d ouside clipping area\n",
 						x, y);
-					input_mt_report_slot_state(
-						rmi4_data->input_dev,
-						MT_TOOL_FINGER, 0);
 					continue;
 				}
 			}
+#ifdef TYPE_B_PROTOCOL
+			input_mt_slot(rmi4_data->input_dev, finger);
+			input_mt_report_slot_state(rmi4_data->input_dev,
+					MT_TOOL_FINGER, finger_status);
+#endif
 
 #ifdef CONFIG_TOUCHSCREEN_TOUCHX_BASE
 			touchxp.touch_magic_dev = rmi4_data->input_dev;
@@ -3530,6 +3527,7 @@ static int synaptics_rmi4_f12_abs_report(struct synaptics_rmi4_data *rmi4_data,
 			active_touch_max_idx = finger + 1;
 #ifdef TYPE_B_PROTOCOL
 		} else {
+			input_mt_slot(rmi4_data->input_dev, finger);
 			/* Touch no longer active, close out slot */
 			input_mt_report_slot_state(rmi4_data->input_dev,
 					MT_TOOL_FINGER, 0);
@@ -3643,13 +3641,11 @@ static int synaptics_rmi4_f11_abs_report(struct synaptics_rmi4_data *rmi4_data,
 			number_of_fingers_actually_touching++;
 	}
 #endif
-
 	for (finger = 0; finger < fingers_supported; finger++) {
 		reg_index = finger / 4;
 		finger_shift = (finger % 4) * 2;
 		finger_status = (finger_status_reg[reg_index] >> finger_shift)
 				& MASK_2BIT;
-
 		/*
 		 * Each 2-bit finger status field represents the following:
 		 * 00 = finger not present
@@ -3657,11 +3653,6 @@ static int synaptics_rmi4_f11_abs_report(struct synaptics_rmi4_data *rmi4_data,
 		 * 10 = finger present but data may be inaccurate
 		 * 11 = reserved
 		 */
-#ifdef TYPE_B_PROTOCOL
-		input_mt_slot(rmi4_data->input_dev, finger);
-		input_mt_report_slot_state(rmi4_data->input_dev,
-					MT_TOOL_FINGER, finger_status);
-#endif
 		if (finger_status) {
 			data_offset = data_addr +
 					num_of_finger_status_regs +
@@ -3684,6 +3675,12 @@ static int synaptics_rmi4_f11_abs_report(struct synaptics_rmi4_data *rmi4_data,
 			if (rmi4_data->board->y_flip)
 				y = rmi4_data->sensor_max_y - y;
 
+#ifdef TYPE_B_PROTOCOL
+			input_mt_slot(rmi4_data->input_dev, finger);
+			input_mt_report_slot_state(rmi4_data->input_dev,
+					MT_TOOL_FINGER, finger_status);
+#endif
+
 #ifdef CONFIG_TOUCHSCREEN_TOUCHX_BASE
 			touchxp.touch_magic_dev = rmi4_data->input_dev;
 			if (touchxp.touchx)
@@ -3720,6 +3717,7 @@ static int synaptics_rmi4_f11_abs_report(struct synaptics_rmi4_data *rmi4_data,
 			touch_count++;
 #ifdef TYPE_B_PROTOCOL
 		} else {
+			input_mt_slot(rmi4_data->input_dev, finger);
 			/* Touch no longer active, close out slot */
 			input_mt_report_slot_state(rmi4_data->input_dev,
 					MT_TOOL_FINGER, 0);
-- 
2.11.0

