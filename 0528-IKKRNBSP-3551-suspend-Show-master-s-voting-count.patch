From 3f6f472cd088421a2dcfc2fc5493c67348696971 Mon Sep 17 00:00:00 2001
From: yangjq <yangjq@lenovo.com>
Date: Fri, 27 Nov 2015 10:10:33 +0800
Subject: [PATCH 528/959] IKKRNBSP-3551 suspend: Show master's voting count

Record voting count in RPM
Calculate voting count when enter and exit suspend

Change-Id: Ia72ec2bead86b4bdf98bbb9f97e1316b0b575a32
Signed-off-by: yangjq <yangjq@lenovo.com>
Reviewed-on: http://gerrit.mot.com/803008
SLTApproved: Slta Waiver <sltawvr@motorola.com>
SME-Granted: SME Approvals Granted
Tested-by: Jira Key <jirakey@motorola.com>
Reviewed-by: Igor Kovalenko <igork@motorola.com>
Submit-Approved: Jira Key <jirakey@motorola.com>
---
 kernel/power/suspend.c | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/kernel/power/suspend.c b/kernel/power/suspend.c
index e2446e08c6b..640fde1ec78 100644
--- a/kernel/power/suspend.c
+++ b/kernel/power/suspend.c
@@ -30,6 +30,9 @@
 #include <linux/wakeup_reason.h>
 
 #include "power.h"
+#ifdef CONFIG_MSM_RPM_STATS_LOG
+#include "../../drivers/soc/qcom/rpm_stats.h"
+#endif
 
 struct pm_sleep_state pm_states[PM_SUSPEND_MAX] = {
 	[PM_SUSPEND_FREEZE] = { .label = "freeze", .state = PM_SUSPEND_FREEZE },
@@ -400,6 +403,9 @@ int pm_suspend(suspend_state_t state)
 		return -EINVAL;
 
 	pm_suspend_marker("entry");
+#ifdef CONFIG_MSM_RPM_STATS_LOG
+	msm_rpmstats_log_suspend_enter();
+#endif
 	error = enter_state(state);
 	if (error) {
 		suspend_stats.fail++;
@@ -407,6 +413,9 @@ int pm_suspend(suspend_state_t state)
 	} else {
 		suspend_stats.success++;
 	}
+#ifdef CONFIG_MSM_RPM_STATS_LOG
+	msm_rpmstats_log_suspend_exit(error);
+#endif
 	pm_suspend_marker("exit");
 	return error;
 }
-- 
2.11.0

