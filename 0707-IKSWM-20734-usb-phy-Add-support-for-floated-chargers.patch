From d7c196f5fc3f126b6337546a92bb5f78375f65d1 Mon Sep 17 00:00:00 2001
From: mahj2 <mahj2@motorola.com>
Date: Wed, 24 Feb 2016 10:47:28 +0800
Subject: [PATCH 707/959] IKSWM-20734: usb: phy: Add support for floated
 chargers

Add support for detecting chargers that float their data
lines and look like Standard Downstream Ports (USB) .
We check for the line state / USB Speed Negotiation for
the maximum number of retries configured in the detection
driver and fall back to the minimum charging rate.

Change-Id: Ie6c968ee0a9c1a8c7107a0252f78fdc18c74fee4
Signed-off-by: mahj2 <mahj2@motorola.com>
Reviewed-on: http://gerrit.mot.com/824963
Reviewed-by: Ravikumar Vembu <raviv@motorola.com>
Tested-by: Jira Key <jirakey@motorola.com>
Reviewed-by: Huosheng Liao <liaohs@motorola.com>
SME-Granted: SME Approvals Granted
SLTApproved: Slta Waiver <sltawvr@motorola.com>
Submit-Approved: Jira Key <jirakey@motorola.com>
---
 drivers/usb/phy/phy-msm-usb.c | 16 ++++++++++++++++
 include/linux/usb/msm_hsusb.h |  2 +-
 2 files changed, 17 insertions(+), 1 deletion(-)

diff --git a/drivers/usb/phy/phy-msm-usb.c b/drivers/usb/phy/phy-msm-usb.c
index b64141be24b..d38f95213aa 100644
--- a/drivers/usb/phy/phy-msm-usb.c
+++ b/drivers/usb/phy/phy-msm-usb.c
@@ -81,6 +81,8 @@
 
 #define USB_DEFAULT_SYSTEM_CLOCK 80000000	/* 80 MHz */
 
+#define MAX_CHGR_RETRY_COUNT    3
+
 #define PM_QOS_SAMPLE_SEC	2
 #define PM_QOS_THRESHOLD	400
 
@@ -2723,7 +2725,17 @@ static void msm_otg_chg_check_timer_func(unsigned long data)
 				otg->phy->state, 0);
 		set_bit(B_FALSE_SDP, &motg->inputs);
 		queue_work(motg->otg_wq, &motg->sm_work);
+		return;
 	}
+
+	if (motg->falsesdp_retry_count < MAX_CHGR_RETRY_COUNT)
+		motg->falsesdp_retry_count++;
+
+	if (motg->falsesdp_retry_count == MAX_CHGR_RETRY_COUNT)
+		msm_otg_notify_charger(motg, IDEV_CHG_MIN);
+	else
+		mod_timer(&motg->chg_check_timer, CHG_RECHECK_DELAY);
+
 }
 
 static bool msm_chg_aca_detect(struct msm_otg *motg)
@@ -3564,6 +3576,7 @@ static void msm_otg_sm_work(struct work_struct *w)
 					msm_otg_start_peripheral(otg, 1);
 					otg->phy->state =
 						OTG_STATE_B_PERIPHERAL;
+                                        motg->falsesdp_retry_count = 0;
 					mod_timer(&motg->chg_check_timer,
 							CHG_RECHECK_DELAY);
 					break;
@@ -3598,6 +3611,7 @@ static void msm_otg_sm_work(struct work_struct *w)
 			dcp = (motg->chg_type == USB_DCP_CHARGER);
 			motg->chg_state = USB_CHG_STATE_UNDEFINED;
 			motg->chg_type = USB_INVALID_CHARGER;
+                        motg->falsesdp_retry_count = 0;
 			msm_otg_notify_charger(motg, 0);
 			if (dcp) {
 				if (motg->ext_chg_active == DEFAULT)
@@ -3694,6 +3708,7 @@ static void msm_otg_sm_work(struct work_struct *w)
 					motg->inputs, otg->phy->state);
 			motg->chg_state = USB_CHG_STATE_UNDEFINED;
 			motg->chg_type = USB_INVALID_CHARGER;
+                        motg->falsesdp_retry_count = 0;
 			msm_otg_notify_charger(motg, 0);
 			srp_reqd = otg->gadget->otg_srp_reqd;
 			msm_otg_start_peripheral(otg, 0);
@@ -3721,6 +3736,7 @@ static void msm_otg_sm_work(struct work_struct *w)
 			 */
 			udelay(1000);
 			msm_otg_start_peripheral(otg, 0);
+                        motg->falsesdp_retry_count = 0;
 			otg->phy->state = OTG_STATE_B_WAIT_ACON;
 			/*
 			 * start HCD even before A-device enable
diff --git a/include/linux/usb/msm_hsusb.h b/include/linux/usb/msm_hsusb.h
index 84b2513ac68..669243fadee 100644
--- a/include/linux/usb/msm_hsusb.h
+++ b/include/linux/usb/msm_hsusb.h
@@ -316,7 +316,6 @@ struct msm_otg_platform_data {
 	bool enable_ahb2ahb_bypass;
 	bool disable_retention_with_vdd_min;
 	int usb_id_gpio;
-	int usb_id_gpio_hw;
 	int hub_reset_gpio;
 	int switch_sel_gpio;
 	bool phy_dvdd_always_on;
@@ -608,6 +607,7 @@ struct msm_otg {
 	int pm_qos_latency;
 	struct pm_qos_request pm_qos_req_dma;
 	struct delayed_work perf_vote_work;
+        int falsesdp_retry_count;
 };
 
 struct ci13xxx_platform_data {
-- 
2.11.0

