From eb816e2bbdd8fda4a9b81d6f0dfbd23c7555598d Mon Sep 17 00:00:00 2001
From: Thomas Merrell-ATM098 <thomasmerrell@motorola.com>
Date: Fri, 15 Jan 2016 11:38:49 -0600
Subject: [PATCH 618/959] IKFPS-465: input: FPC: Move dev_info messages to
 dev_dbg

Several debug logs need to be changed from dev_info to dev_dbg

Change-Id: I119bc8252507b06fe18b744d8233e0ca9fc63fc8
Signed-off-by: Thomas Merrell-ATM098 <thomasmerrell@motorola.com>
Reviewed-on: http://gerrit.mot.com/813694
SLTApproved: Slta Waiver <sltawvr@motorola.com>
SME-Granted: SME Approvals Granted
Tested-by: Jira Key <jirakey@motorola.com>
Reviewed-by: Igor Kovalenko <igork@motorola.com>
Submit-Approved: Jira Key <jirakey@motorola.com>
---
 drivers/input/misc/fpc1020_tee.c | 21 +++++++++++----------
 1 file changed, 11 insertions(+), 10 deletions(-)

diff --git a/drivers/input/misc/fpc1020_tee.c b/drivers/input/misc/fpc1020_tee.c
index 06f63e3bf68..7b81e1d41a3 100644
--- a/drivers/input/misc/fpc1020_tee.c
+++ b/drivers/input/misc/fpc1020_tee.c
@@ -205,12 +205,13 @@ static int set_clks(struct fpc1020_data *fpc1020, bool enable)
 	int rc = 0;
 
 	if (enable == fpc1020->clocks_enabled) {
-		dev_info(fpc1020->dev, "enable == clocks_enabled\n");
+		dev_dbg(fpc1020->dev, "%s: clocks already %s, no change\n",
+			__func__, enable ? "enabled" : "disabled");
 		goto out;
 	}
 
 	if (enable) {
-		dev_info(fpc1020->dev, "setting clk rates\n");
+		dev_dbg(fpc1020->dev, "setting clk rates\n");
 		wake_lock(&fpc1020->wlock);
 		rc = clk_set_rate(fpc1020->core_clk,
 				fpc1020->spi->max_speed_hz);
@@ -221,7 +222,7 @@ static int set_clks(struct fpc1020_data *fpc1020, bool enable)
 					rc);
 			return rc;
 		}
-		dev_info(fpc1020->dev, "enabling core_clk\n");
+		dev_dbg(fpc1020->dev, "enabling core_clk\n");
 		rc = clk_prepare_enable(fpc1020->core_clk);
 		if (rc) {
 			dev_err(fpc1020->dev,
@@ -230,7 +231,7 @@ static int set_clks(struct fpc1020_data *fpc1020, bool enable)
 			goto out;
 		}
 
-		dev_info(fpc1020->dev, "enabling iface_clk\n");
+		dev_dbg(fpc1020->dev, "enabling iface_clk\n");
 		rc = clk_prepare_enable(fpc1020->iface_clk);
 		if (rc) {
 			dev_err(fpc1020->dev,
@@ -244,7 +245,7 @@ static int set_clks(struct fpc1020_data *fpc1020, bool enable)
 
 		fpc1020->clocks_enabled = true;
 	} else {
-		dev_info(fpc1020->dev, "disabling clks\n");
+		dev_dbg(fpc1020->dev, "disabling clks\n");
 		clk_disable_unprepare(fpc1020->iface_clk);
 		clk_disable_unprepare(fpc1020->core_clk);
 		fpc1020->clocks_enabled = false;
@@ -303,7 +304,7 @@ static irqreturn_t fpc1020_irq_handler(int irq, void *handle)
 {
 	struct fpc1020_data *fpc1020 = handle;
 
-	dev_err(fpc1020->dev, "%s\n", __func__);
+	dev_dbg(fpc1020->dev, "%s\n", __func__);
 	sysfs_notify(&fpc1020->dev->kobj, NULL, dev_attr_irq.attr.name);
 	return IRQ_HANDLED;
 }
@@ -321,7 +322,7 @@ static int fpc1020_request_named_gpio(struct fpc1020_data *fpc1020,
 		dev_err(dev, "failed to request gpio %d\n", *gpio);
 		return rc;
 	}
-	dev_info(dev, "%s %d\n", label, *gpio);
+	dev_dbg(dev, "%s %d\n", label, *gpio);
 	return 0;
 }
 
@@ -400,7 +401,7 @@ static int fpc1020_probe(struct spi_device *spi)
 	}
 
 	if (of_property_read_bool(dev->of_node, "fpc,enable-on-boot")) {
-		dev_info(dev, "Enabling hardware\n");
+		dev_dbg(dev, "Enabling hardware\n");
 		set_clks(fpc1020, true);
 	}
 
@@ -466,7 +467,7 @@ static int __init fpc1020_init(void)
 	int rc = spi_register_driver(&fpc1020_driver);
 
 	if (!rc)
-		pr_info("%s OK\n", __func__);
+		pr_debug("%s OK\n", __func__);
 	else
 		pr_err("%s %d\n", __func__, rc);
 	return rc;
@@ -474,7 +475,7 @@ static int __init fpc1020_init(void)
 
 static void __exit fpc1020_exit(void)
 {
-	pr_info("%s\n", __func__);
+	pr_debug("%s\n", __func__);
 	spi_unregister_driver(&fpc1020_driver);
 }
 
-- 
2.11.0

