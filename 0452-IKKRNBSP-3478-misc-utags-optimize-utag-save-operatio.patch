From f56c7789961241aaa59fd7fbacf6bb3baace2d84 Mon Sep 17 00:00:00 2001
From: Dmitry Ornatsky <cdo021c@motorola.com>
Date: Fri, 30 Oct 2015 20:48:43 -0500
Subject: [PATCH 452/959] IKKRNBSP-3478 misc: utags: optimize utag save
 operation

Writing of the back up partition can be done right after
the primary one. There is no need to go through with
utag freezing again.

Change-Id: I2946eac21435954ff0c55e668aa356391a59dfc1
Signed-off-by: Dmitry Ornatsky <cdo021c@motorola.com>
Reviewed-on: http://gerrit.mot.com/797555
SLTApproved: Slta Waiver <sltawvr@motorola.com>
SME-Granted: SME Approvals Granted
Tested-by: Jira Key <jirakey@motorola.com>
Reviewed-by: Igor Kovalenko <igork@motorola.com>
Submit-Approved: Jira Key <jirakey@motorola.com>
---
 drivers/misc/utag/utags.c | 35 +++++++++++++++++++----------------
 1 file changed, 19 insertions(+), 16 deletions(-)

diff --git a/drivers/misc/utag/utags.c b/drivers/misc/utag/utags.c
index d9741848630..be9c9f18e7b 100644
--- a/drivers/misc/utag/utags.c
+++ b/drivers/misc/utag/utags.c
@@ -537,7 +537,7 @@ static int replace_first_utag(struct utag *head, const char *name,
 	return 0;
 }
 
-static int flash_partition(struct blkdev *cb, const struct utag *tags)
+static int store_utags(struct ctrl *ctrl, const struct utag *tags)
 {
 	size_t written;
 	size_t tags_size;
@@ -545,6 +545,8 @@ static int flash_partition(struct blkdev *cb, const struct utag *tags)
 	int rc = 0;
 	mm_segment_t fs;
 	loff_t pos = 0;
+	struct file *fp = ctrl->main.filep;
+	struct blkdev *cb = &ctrl->main;
 
 	fs = get_fs();
 	set_fs(KERNEL_DS);
@@ -555,12 +557,25 @@ static int flash_partition(struct blkdev *cb, const struct utag *tags)
 		goto out;
 	}
 
-	written = cb->filep->f_op->write(cb->filep, datap, tags_size, &pos);
+	written = fp->f_op->write(fp, datap, tags_size, &pos);
 	if (written < tags_size) {
-		pr_err("%s ERROR writing file (%s) ret %zu\n", __func__,
-		       cb->name, written);
+		pr_err("%s ERR writing file (%s) ret %zu\n", __func__,
+			cb->name, written);
 		rc = -EIO;
 	}
+
+	fp = ctrl->backup.filep;
+	cb = &ctrl->backup;
+	pos = 0;
+
+	if (fp) {
+		written = fp->f_op->write(fp, datap, tags_size, &pos);
+		if (written < tags_size) {
+			pr_err("%s ERR writing file (%s) ret %zu\n", __func__,
+				cb->name, written);
+			rc = -EIO;
+		}
+	}
 	vfree(datap);
 
  out:
@@ -568,18 +583,6 @@ static int flash_partition(struct blkdev *cb, const struct utag *tags)
 	return rc;
 }
 
-static int store_utags(struct ctrl *ctrl, const struct utag *tags)
-{
-	int rc;
-
-	rc = flash_partition(&ctrl->main, tags);
-
-	if (flash_partition(&ctrl->backup, tags))
-		pr_err("%s flash backup utags failed\n", __func__);
-
-	return rc;
-}
-
 static int read_tag(struct seq_file *file, void *v)
 {
 	int i;
-- 
2.11.0

