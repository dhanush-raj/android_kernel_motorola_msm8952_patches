From b77bd016a6543060fa3794b5fcf895b06a46eb8c Mon Sep 17 00:00:00 2001
From: Eric Hefner <ehefner@motorola.com>
Date: Thu, 5 Nov 2015 13:55:33 -0600
Subject: [PATCH 446/959] IKLOCSEN-2418 drivers: misc: Enable Step Counter/Det

- Enable for BMI160 based products
- remove unsent display brightness to fix indexing

Change-Id: I4c849771b41debf0f32070d38ad1a445be9066a4
Signed-off-by: Eric Hefner <ehefner@motorola.com>
Reviewed-on: http://gerrit.mot.com/796986
SLTApproved: Slta Waiver <sltawvr@motorola.com>
SME-Granted: SME Approvals Granted
Tested-by: Jira Key <jirakey@motorola.com>
Reviewed-by: Robert Wiegand <Robert.P.Wiegand@motorola.com>
Reviewed-by: Ravikumar Vembu <raviv@motorola.com>
Submit-Approved: Jira Key <jirakey@motorola.com>
---
 drivers/misc/stml0xx/stml0xx_core.c  |  1 +
 drivers/misc/stml0xx/stml0xx_ioctl.c | 18 ++++++++++++++++++
 drivers/misc/stml0xx/stml0xx_irq.c   | 25 +++++++++++++++++++------
 drivers/misc/stml0xx/stml0xx_reset.c |  7 +++++++
 include/linux/stml0xx.h              |  3 ++-
 include/uapi/linux/motosh_vmm.h      |  6 +++---
 include/uapi/linux/stml0xx.h         |  5 ++++-
 7 files changed, 54 insertions(+), 11 deletions(-)

diff --git a/drivers/misc/stml0xx/stml0xx_core.c b/drivers/misc/stml0xx/stml0xx_core.c
index b471f29404a..d55f7720d6e 100644
--- a/drivers/misc/stml0xx/stml0xx_core.c
+++ b/drivers/misc/stml0xx/stml0xx_core.c
@@ -65,6 +65,7 @@ unsigned short stml0xx_g_mag_delay;
 unsigned short stml0xx_g_gyro_delay;
 unsigned short stml0xx_g_baro_delay;
 unsigned short stml0xx_g_als_delay;
+unsigned short stml0xx_g_step_counter_delay;
 unsigned long stml0xx_g_nonwake_sensor_state;
 unsigned long stml0xx_g_wake_sensor_state;
 unsigned short stml0xx_g_algo_state;
diff --git a/drivers/misc/stml0xx/stml0xx_ioctl.c b/drivers/misc/stml0xx/stml0xx_ioctl.c
index 80df15104db..8c4c518a005 100644
--- a/drivers/misc/stml0xx/stml0xx_ioctl.c
+++ b/drivers/misc/stml0xx/stml0xx_ioctl.c
@@ -208,6 +208,24 @@ long stml0xx_misc_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
 							buf, 1);
 		}
 		break;
+	case STML0XX_IOCTL_SET_STEP_COUNTER_DELAY:
+		dev_dbg(&stml0xx_misc_data->spi->dev,
+			"STML0XX_IOCTL_SET_STEP_COUNTER_DELAY");
+		delay = 0;
+		if (copy_from_user(&delay, argp, sizeof(delay))) {
+			dev_dbg(&stml0xx_misc_data->spi->dev,
+				"Copy step counter delay returned error");
+			err = -EFAULT;
+			break;
+		}
+		stml0xx_g_step_counter_delay = delay;
+		if (stml0xx_g_booted) {
+			buf[0] = delay >> 8;
+			buf[1] = delay & 0xFF;
+			err = stml0xx_spi_send_write_reg(STEP_COUNTER_INFO,
+							buf, 2);
+		}
+		break;
 	case STML0XX_IOCTL_SET_SENSORS:
 		dev_dbg(&stml0xx_misc_data->spi->dev,
 			"STML0XX_IOCTL_SET_SENSORS");
diff --git a/drivers/misc/stml0xx/stml0xx_irq.c b/drivers/misc/stml0xx/stml0xx_irq.c
index cc051fd049b..94b037f5891 100644
--- a/drivers/misc/stml0xx/stml0xx_irq.c
+++ b/drivers/misc/stml0xx/stml0xx_irq.c
@@ -309,14 +309,27 @@ void stml0xx_irq_work_func(struct work_struct *work)
 			"Sending disp_rotate(x)value: %d",
 			buf[IRQ_IDX_DISP_ROTATE]);
 	}
-	if (irq_status & M_DISP_BRIGHTNESS) {
-		stml0xx_as_data_buffer_write(ps_stml0xx, DT_DISP_BRIGHT,
-						&buf[IRQ_IDX_DISP_BRIGHTNESS],
-						 1, 0, stm_ws->ts_ns);
+	if (irq_status & M_STEP_COUNTER) {
+		stml0xx_as_data_buffer_write(ps_stml0xx, DT_STEP_COUNTER,
+					&buf[IRQ_IDX_STEP_COUNTER],
+					4, 0, stm_ws->ts_ns);
 
 		dev_dbg(&stml0xx_misc_data->spi->dev,
-			"Sending Display Brightness %d",
-			buf[IRQ_IDX_DISP_BRIGHTNESS]);
+			"Sending step count: %d %d %d %d",
+			buf[IRQ_IDX_STEP_COUNTER],
+			buf[IRQ_IDX_STEP_COUNTER + 1],
+			buf[IRQ_IDX_STEP_COUNTER + 2],
+			buf[IRQ_IDX_STEP_COUNTER + 3]);
+	}
+	if (irq_status & M_STEP_DETECTOR) {
+		uint8_t step = 1;
+
+		stml0xx_as_data_buffer_write(ps_stml0xx, DT_STEP_DETECTOR,
+					&step,
+					1, 0, stm_ws->ts_ns);
+
+		dev_dbg(&stml0xx_misc_data->spi->dev,
+			"Sending step detect");
 	}
 EXIT:
 	kfree((void *)stm_ws);
diff --git a/drivers/misc/stml0xx/stml0xx_reset.c b/drivers/misc/stml0xx/stml0xx_reset.c
index 9ec72e2dcaf..c2838ce2833 100644
--- a/drivers/misc/stml0xx/stml0xx_reset.c
+++ b/drivers/misc/stml0xx/stml0xx_reset.c
@@ -128,6 +128,13 @@ void stml0xx_initialize_work_func(struct work_struct *work)
 	if (err < 0)
 		ret_err = err;
 
+	buf[0] = stml0xx_g_step_counter_delay >> 8;
+	buf[1] = stml0xx_g_step_counter_delay & 0xFF;
+	err = stml0xx_spi_send_write_reg_reset(STEP_COUNTER_INFO, buf,
+			2, RESET_NOT_ALLOWED);
+	if (err < 0)
+		ret_err = err;
+
 	buf[0] = stml0xx_g_algo_state & 0xFF;
 	buf[1] = stml0xx_g_algo_state >> 8;
 	err = stml0xx_spi_send_write_reg_reset(ALGO_CONFIG, buf, 2,
diff --git a/include/linux/stml0xx.h b/include/linux/stml0xx.h
index 02e86ee5565..d943a40de04 100644
--- a/include/linux/stml0xx.h
+++ b/include/linux/stml0xx.h
@@ -107,7 +107,7 @@ enum vmm_ids {
 #define IRQ_IDX_GYRO_CAL_Z           102
 #define IRQ_IDX_ALS                  104
 #define IRQ_IDX_DISP_ROTATE          106
-#define IRQ_IDX_DISP_BRIGHTNESS      107
+#define IRQ_IDX_STEP_COUNTER         107
 
 /* stml0xx wake IRQ SPI buffer indexes */
 #define WAKE_IRQ_IDX_STATUS_LO              0
@@ -421,6 +421,7 @@ extern unsigned short stml0xx_g_mag_delay;
 extern unsigned short stml0xx_g_gyro_delay;
 extern unsigned short stml0xx_g_baro_delay;
 extern unsigned short stml0xx_g_als_delay;
+extern unsigned short stml0xx_g_step_counter_delay;
 extern unsigned long stml0xx_g_nonwake_sensor_state;
 extern unsigned short stml0xx_g_algo_state;
 extern unsigned char stml0xx_g_motion_dur;
diff --git a/include/uapi/linux/motosh_vmm.h b/include/uapi/linux/motosh_vmm.h
index 863ce63e9d5..e14d5df987f 100644
--- a/include/uapi/linux/motosh_vmm.h
+++ b/include/uapi/linux/motosh_vmm.h
@@ -91,9 +91,9 @@ VMM_ENTRY(0x13, ACCEL2_UPDATE_RATE,					TRUE,
 VMM_ENTRY(0x14, DISP_ROTATE_UPDATE_RATE,				TRUE,
 		&vmm_disp_rotate_update_rate,
 		sizeof(vmm_disp_rotate_update_rate))
-VMM_ENTRY(0x15, UNUSED_15,						FALSE,
-		0,
-		0)
+VMM_ENTRY(0x15, STEP_COUNTER_INFO,					TRUE,
+		vmm_step_counter_info,
+		sizeof(vmm_step_counter_info))
 VMM_ENTRY(0x16, ACCEL_UPDATE_RATE,					TRUE,
 		&vmm_accel_update_rate,
 		sizeof(vmm_accel_update_rate))
diff --git a/include/uapi/linux/stml0xx.h b/include/uapi/linux/stml0xx.h
index 72a8096478c..426e84f2012 100644
--- a/include/uapi/linux/stml0xx.h
+++ b/include/uapi/linux/stml0xx.h
@@ -100,7 +100,8 @@
 		_IOW(STML0XX_IOCTL_BASE, 32,  unsigned short)
 #define STML0XX_IOCTL_SET_MOTION_DUR	\
 		_IOW(STML0XX_IOCTL_BASE, 33, unsigned int)
-/* 34 unused */
+#define STML0XX_IOCTL_SET_STEP_COUNTER_DELAY	\
+		_IOW(STML0XX_IOCTL_BASE, 34, unsigned short)
 #define STML0XX_IOCTL_SET_ZRMOTION_DUR	\
 		_IOW(STML0XX_IOCTL_BASE, 35, unsigned int)
 #define STML0XX_IOCTL_GET_WAKESENSORS	\
@@ -297,6 +298,8 @@ enum STML0XX_data_types {
 	DT_LIFT,
 	DT_CHOPCHOP,
 	DT_GYRO_CAL,
+	DT_STEP_COUNTER,
+	DT_STEP_DETECTOR
 };
 
 enum {
-- 
2.11.0

