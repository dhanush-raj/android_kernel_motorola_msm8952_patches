From 6bcafd010879a007e36efbf6dfde05baf6387dcb Mon Sep 17 00:00:00 2001
From: SeungYoon Lee <w22905@motorola.com>
Date: Fri, 21 Nov 2014 14:16:19 -0600
Subject: [PATCH 097/959] IKVPREL1L-3627 drivers: misc: stml0xx: Add headset
 event logging

Add event reporting logs when driver routes those to Android.
This will help us to understand its detection/report work correctly.

As overheading sensorhub to log will degrade its performance,
this driver is last end place to print meaningful log out.

Change-Id: Icb1fec1bb382516b5b07ef36c533d65629b0690c
Signed-off-by: SeungYoon Lee <w22905@motorola.com>
Reviewed-on: http://gerrit.mot.com/691687
SLTApproved: Slta Waiver <sltawvr@motorola.com>
Tested-by: Jira Key <jirakey@motorola.com>
Reviewed-by: Robert Wiegand <Robert.P.Wiegand@motorola.com>
Reviewed-by: Jason Hrycay <jason.hrycay@motorola.com>
Submit-Approved: Jira Key <jirakey@motorola.com>
---
 drivers/misc/stml0xx/stml0xx_wake_irq.c | 24 ++++++++++++------------
 1 file changed, 12 insertions(+), 12 deletions(-)

diff --git a/drivers/misc/stml0xx/stml0xx_wake_irq.c b/drivers/misc/stml0xx/stml0xx_wake_irq.c
index 262130014cc..e255f5b2d2e 100644
--- a/drivers/misc/stml0xx/stml0xx_wake_irq.c
+++ b/drivers/misc/stml0xx/stml0xx_wake_irq.c
@@ -226,7 +226,7 @@ void stml0xx_irq_wake_work_func(struct work_struct *work)
 		switch (Headset_State) {
 		case SH_HEADSET_BUTTON_1:
 			if (!(new_state & SH_HEADSET_BUTTON_1_DOWN)) {
-				dev_dbg(&stml0xx_misc_data->spi->dev,
+				dev_info(&stml0xx_misc_data->spi->dev,
 					"Headset button 1 released");
 				Headset_State = SH_HEADSET_INSERTED;
 				input_report_key(ps_stml0xx->input_dev,
@@ -237,7 +237,7 @@ void stml0xx_irq_wake_work_func(struct work_struct *work)
 			break;
 		case SH_HEADSET_BUTTON_2:
 			if (!(new_state & SH_HEADSET_BUTTON_2_DOWN)) {
-				dev_dbg(&stml0xx_misc_data->spi->dev,
+				dev_info(&stml0xx_misc_data->spi->dev,
 					"Headset button 2 released");
 				Headset_State = SH_HEADSET_INSERTED;
 				input_report_key(ps_stml0xx->input_dev,
@@ -248,7 +248,7 @@ void stml0xx_irq_wake_work_func(struct work_struct *work)
 			break;
 		case SH_HEADSET_BUTTON_3:
 			if (!(new_state & SH_HEADSET_BUTTON_3_DOWN)) {
-				dev_dbg(&stml0xx_misc_data->spi->dev,
+				dev_info(&stml0xx_misc_data->spi->dev,
 					"Headset button 3 released");
 				Headset_State = SH_HEADSET_INSERTED;
 				input_report_key(ps_stml0xx->input_dev,
@@ -259,7 +259,7 @@ void stml0xx_irq_wake_work_func(struct work_struct *work)
 			break;
 		case SH_HEADSET_BUTTON_4:
 			if (!(new_state & SH_HEADSET_BUTTON_4_DOWN)) {
-				dev_dbg(&stml0xx_misc_data->spi->dev,
+				dev_info(&stml0xx_misc_data->spi->dev,
 					"Headset button 4 released");
 				Headset_State = SH_HEADSET_INSERTED;
 				input_report_key(ps_stml0xx->input_dev,
@@ -273,7 +273,7 @@ void stml0xx_irq_wake_work_func(struct work_struct *work)
 		}
 		if (Headset_State == SH_HEADPHONE_INSERTED) {
 			if (!(new_state & SH_HEADPHONE_DETECTED)) {
-				dev_dbg(&stml0xx_misc_data->spi->dev,
+				dev_info(&stml0xx_misc_data->spi->dev,
 					"Headphone removed");
 				Headset_State = SH_HEADSET_REMOVED;
 				input_report_switch(ps_stml0xx->input_dev,
@@ -282,7 +282,7 @@ void stml0xx_irq_wake_work_func(struct work_struct *work)
 			}
 		} else if (Headset_State ==  SH_HEADSET_INSERTED) {
 			if (!(new_state & SH_HEADSET_DETECTED)) {
-				dev_dbg(&stml0xx_misc_data->spi->dev,
+				dev_info(&stml0xx_misc_data->spi->dev,
 					"Headset removed");
 				Headset_State = SH_HEADSET_REMOVED;
 				input_report_switch(ps_stml0xx->input_dev,
@@ -294,14 +294,14 @@ void stml0xx_irq_wake_work_func(struct work_struct *work)
 		}
 		if (Headset_State == SH_HEADSET_REMOVED) {
 			if (new_state & SH_HEADPHONE_DETECTED) {
-				dev_dbg(&stml0xx_misc_data->spi->dev,
+				dev_info(&stml0xx_misc_data->spi->dev,
 					"Headphone inserted");
 				Headset_State = SH_HEADPHONE_INSERTED;
 				input_report_switch(ps_stml0xx->input_dev,
 						SW_HEADPHONE_INSERT, 1);
 				input_sync(ps_stml0xx->input_dev);
 			} else if (new_state & SH_HEADSET_DETECTED) {
-				dev_dbg(&stml0xx_misc_data->spi->dev,
+				dev_info(&stml0xx_misc_data->spi->dev,
 					"Headset inserted");
 				Headset_State = SH_HEADSET_INSERTED;
 				input_report_switch(ps_stml0xx->input_dev,
@@ -313,7 +313,7 @@ void stml0xx_irq_wake_work_func(struct work_struct *work)
 		}
 		if (Headset_State == SH_HEADSET_INSERTED) {
 			if (new_state & SH_HEADSET_BUTTON_1_DOWN) {
-				dev_dbg(&stml0xx_misc_data->spi->dev,
+				dev_info(&stml0xx_misc_data->spi->dev,
 					"Headset button 1 pressed");
 				Headset_State = SH_HEADSET_BUTTON_1;
 				input_report_key(ps_stml0xx->input_dev,
@@ -321,7 +321,7 @@ void stml0xx_irq_wake_work_func(struct work_struct *work)
 					1);
 				input_sync(ps_stml0xx->input_dev);
 			} else if (new_state & SH_HEADSET_BUTTON_2_DOWN) {
-				dev_dbg(&stml0xx_misc_data->spi->dev,
+				dev_info(&stml0xx_misc_data->spi->dev,
 					"Headset button 2 pressed");
 				Headset_State = SH_HEADSET_BUTTON_2;
 				input_report_key(ps_stml0xx->input_dev,
@@ -329,7 +329,7 @@ void stml0xx_irq_wake_work_func(struct work_struct *work)
 					1);
 				input_sync(ps_stml0xx->input_dev);
 			} else if (new_state & SH_HEADSET_BUTTON_3_DOWN) {
-				dev_dbg(&stml0xx_misc_data->spi->dev,
+				dev_info(&stml0xx_misc_data->spi->dev,
 					"Headset button 3 pressed");
 				Headset_State = SH_HEADSET_BUTTON_3;
 				input_report_key(ps_stml0xx->input_dev,
@@ -337,7 +337,7 @@ void stml0xx_irq_wake_work_func(struct work_struct *work)
 					1);
 				input_sync(ps_stml0xx->input_dev);
 			} else if (new_state & SH_HEADSET_BUTTON_4_DOWN) {
-				dev_dbg(&stml0xx_misc_data->spi->dev,
+				dev_info(&stml0xx_misc_data->spi->dev,
 					"Headset button 4 pressed");
 				Headset_State = SH_HEADSET_BUTTON_4;
 				input_report_key(ps_stml0xx->input_dev,
-- 
2.11.0

