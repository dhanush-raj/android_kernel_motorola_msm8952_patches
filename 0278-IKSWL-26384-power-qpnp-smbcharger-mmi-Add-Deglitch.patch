From 89ab0b4e43173929b7d780b5650814f98fb6ba40 Mon Sep 17 00:00:00 2001
From: Kenny Kessler <kenny.kessler@motorola.com>
Date: Tue, 14 Jul 2015 14:16:49 -0500
Subject: [PATCH 278/959] IKSWL-26384: power: qpnp-smbcharger-mmi: Add Deglitch

Switching the deglitch to 15 microseconds is needed
once the battery reaches taper to prevent a HW error.
If the error occurs then the Fuel Gauge can end up
with data that is very wrong.  The Battery Meter
will then respond poorly.

Change-Id: I5310a852a7513d86c4ae031d54c57a6525d2d1ee
Signed-off-by: Kenny Kessler <kenny.kessler@motorola.com>
Reviewed-on: http://gerrit.mot.com/766731
SLTApproved: Slta Waiver <sltawvr@motorola.com>
SME-Granted: SME Approvals Granted
Tested-by: Jira Key <jirakey@motorola.com>
Reviewed-by: Jason Knopsnyder <jasonk@motorola.com>
Submit-Approved: Jira Key <jirakey@motorola.com>
Reviewed-by: Vidyadhar Gurram <rnh786@motorola.com>
---
 drivers/power/qpnp-smbcharger-mmi.c | 17 +++--------------
 1 file changed, 3 insertions(+), 14 deletions(-)

diff --git a/drivers/power/qpnp-smbcharger-mmi.c b/drivers/power/qpnp-smbcharger-mmi.c
index 84541abd9b5..383538e1bcd 100644
--- a/drivers/power/qpnp-smbcharger-mmi.c
+++ b/drivers/power/qpnp-smbcharger-mmi.c
@@ -3340,9 +3340,6 @@ static void smbchg_aicl_deglitch_wa_en(struct smbchg_chip *chip, bool en)
 {
 	int rc;
 
-	if (chip->force_aicl_rerun)
-		return;
-
 	if (en && !chip->aicl_deglitch_short) {
 		rc = smbchg_sec_masked_write(chip,
 			chip->usb_chgpth_base + USB_AICL_CFG,
@@ -3358,11 +3355,6 @@ static void smbchg_aicl_deglitch_wa_en(struct smbchg_chip *chip, bool en)
 			pr_err("Couldn't write to DC_AICL_CFG rc=%d\n", rc);
 			return;
 		}
-		rc = smbchg_hw_aicl_rerun_en(chip, true);
-		if (rc) {
-			pr_err("Couldn't enable AICL rerun rc=%d\n", rc);
-			return;
-		}
 		pr_smb(PR_STATUS, "AICL deglitch set to short\n");
 	} else if (!en && chip->aicl_deglitch_short) {
 		rc = smbchg_sec_masked_write(chip,
@@ -3379,11 +3371,6 @@ static void smbchg_aicl_deglitch_wa_en(struct smbchg_chip *chip, bool en)
 			pr_err("Couldn't write to DC_AICL_CFG rc=%d\n", rc);
 			return;
 		}
-		smbchg_hw_aicl_rerun_en(chip, false);
-		if (rc) {
-			pr_err("Couldn't disable AICL rerun rc=%d\n", rc);
-			return;
-		}
 		pr_smb(PR_STATUS, "AICL deglitch set to normal\n");
 	}
 	chip->aicl_deglitch_short = en;
@@ -3492,7 +3479,8 @@ static void smbchg_rate_check(struct smbchg_chip *chip)
 			chip->charger_rate = POWER_SUPPLY_CHARGE_RATE_NORMAL;
 		else if (smbchg_hvdcp_det_check(chip))
 			chip->charger_rate = POWER_SUPPLY_CHARGE_RATE_TURBO;
-		else if (chip->hvdcp_det_done && chip->aicl_complete &&
+		else if (!chip->vbat_above_headroom &&
+			 chip->hvdcp_det_done && chip->aicl_complete &&
 			 (smbchg_get_aicl_level_ma(chip) < WEAK_CHRG_THRSH))
 			chip->charger_rate = POWER_SUPPLY_CHARGE_RATE_WEAK;
 		else
@@ -7218,6 +7206,7 @@ static void smbchg_heartbeat_work(struct work_struct *work)
 			smbchg_set_fastchg_current(chip,
 					      chip->target_fastchg_current_ma);
 		}
+		smbchg_aicl_deglitch_wa_check(chip);
 	}
 
 end_hb:
-- 
2.11.0

