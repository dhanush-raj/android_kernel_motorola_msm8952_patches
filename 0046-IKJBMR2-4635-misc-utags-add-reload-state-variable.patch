From 06a9b0ab83e5d2e21bd315ecbe2d721a18850c35 Mon Sep 17 00:00:00 2001
From: Dmitry Ornatsky <cdo021c@motorola.com>
Date: Fri, 13 Sep 2013 16:39:56 -0500
Subject: [PATCH 046/959] IKJBMR2-4635 misc: utags: add reload state variable

To avoid race conditions with reload interface users
add state variable to indicate when utags are loaded.

Change-Id: If36ae637232449c33a13b32c422eee1e7cde9009
Signed-off-by: Dmitry Ornatsky <cdo021c@motorola.com>
Reviewed-on: http://gerrit.pcs.mot.com/566416
SLTApproved: Slta Waiver <sltawvr@motorola.com>
Tested-by: Jira Key <jirakey@motorola.com>
Reviewed-by: Klocwork kwcheck <klocwork-kwcheck@sourceforge.mot.com>
Reviewed-by: Check Patch <CHEKPACH@motorola.com>
Reviewed-by: Jason Hrycay <jason.hrycay@motorola.com>
Submit-Approved: Jira Key <jirakey@motorola.com>
---
 drivers/misc/utag/utags.c | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

diff --git a/drivers/misc/utag/utags.c b/drivers/misc/utag/utags.c
index b38eb8f0d90..8b7d90f5592 100644
--- a/drivers/misc/utag/utags.c
+++ b/drivers/misc/utag/utags.c
@@ -44,7 +44,12 @@ enum utag_flag {
 	UTAG_FLAG_PROTECTED = 1 << 0,
 };
 
+#define UTAG_STATUS_LOADED '0'
+#define UTAG_STATUS_RELOAD '1'
+#define UTAG_STATUS_NOT_READY '2'
+
 static uint32_t csum;
+static char reload_ctrl = UTAG_STATUS_NOT_READY;
 static char payload[MAX_UTAG_SIZE];
 static struct proc_dir_entry *dir_root;
 
@@ -833,24 +838,23 @@ static int dump_all(struct seq_file *file, void *v)
 
 static int reload_show(struct seq_file *file, void *v)
 {
-	seq_puts(file, "0\n");
+	seq_printf(file, "%c\n", reload_ctrl);
 	return 0;
 }
 
 static ssize_t reload_write(struct file *file, const char __user *buffer,
 	   size_t count, loff_t *pos)
 {
-	char c;
 
 	if (1 > count)
 		goto out;
 
-	if (copy_from_user(&c, buffer, 1)) {
+	if (copy_from_user(&reload_ctrl, buffer, 1)) {
 		pr_err("%s user copy error\n", __func__);
 		return -EFAULT;
 	}
 
-	if ('1' == c) {
+	if (UTAG_STATUS_RELOAD == reload_ctrl) {
 		clear_utags_directory();
 		build_utags_directory();
 	}
@@ -962,6 +966,7 @@ static void build_utags_directory(void)
 	utag_file("all", "new", OUT_NEW, dir, &new_fops);
 
 	free_tags(tags);
+	reload_ctrl = UTAG_STATUS_LOADED;
 }
 
 static void clear_utags_directory(void)
-- 
2.11.0

