From d8dd3e8d4bd19959d83f411a42893ee978825db7 Mon Sep 17 00:00:00 2001
From: Konstantin Makariev <kmakariev@motorola.com>
Date: Fri, 14 Aug 2015 13:49:55 -0500
Subject: [PATCH 370/959] IKSWM-7374 synaptics_dsx_i2c: suppress touches from
 inside clip area

This introduces a concept of clipping area. Touch events with x&y
coordinates inside clipping area will be suppressed. Suppression
gets enabled with switching folio state to closed.

PROPAGATED_from: IKSWL-35211

Change-Id: I9c5c9b96fe91caafc633fbf7c5e6829073a47323
Signed-off-by: Konstantin Makariev <kmakariev@motorola.com>
Reviewed-on: http://gerrit.mot.com/791864
SLTApproved: Slta Waiver <sltawvr@motorola.com>
SME-Granted: SME Approvals Granted
Tested-by: Jira Key <jirakey@motorola.com>
Reviewed-by: Igor Kovalenko <igork@motorola.com>
Submit-Approved: Jira Key <jirakey@motorola.com>
---
 drivers/input/touchscreen/synaptics_dsx_i2c.c | 49 +++++++++++++++++++++++++--
 drivers/input/touchscreen/synaptics_dsx_i2c.h |  6 ++++
 2 files changed, 52 insertions(+), 3 deletions(-)

diff --git a/drivers/input/touchscreen/synaptics_dsx_i2c.c b/drivers/input/touchscreen/synaptics_dsx_i2c.c
index 324b566891e..138d4fa36e7 100644
--- a/drivers/input/touchscreen/synaptics_dsx_i2c.c
+++ b/drivers/input/touchscreen/synaptics_dsx_i2c.c
@@ -1438,6 +1438,28 @@ static struct synaptics_dsx_platform_data *
 		rmi4_data->charger_detection = true;
 	}
 
+	if (of_property_read_bool(np, "synaptics,touch-clip-area")) {
+		struct synaptics_clip_area *clip_area;
+
+		clip_area = kzalloc(sizeof(*clip_area), GFP_KERNEL);
+		if (!clip_area) {
+			dev_err(&client->dev, "clip area allocation failure\n");
+			return NULL;
+		}
+
+		retval = of_property_read_u32_array(np,
+				"synaptics,touch-clip-area",
+				(unsigned *)clip_area, 4);
+		if (retval) {
+			dev_err(&client->dev, "clip area read failure\n");
+			kfree(clip_area);
+			goto exit_func;
+		}
+
+		rmi4_data->clipa = clip_area;
+		pr_notice("using touch clip area\n");
+	}
+exit_func:
 	return pdata;
 }
 #else
@@ -3458,6 +3480,25 @@ static int synaptics_rmi4_f12_abs_report(struct synaptics_rmi4_data *rmi4_data,
 			if (rmi4_data->board->y_flip)
 				y = rmi4_data->sensor_max_y - y;
 
+			if (rmi4_data->clipping_on && rmi4_data->clipa) {
+				bool inside;
+
+				inside = (x >= rmi4_data->clipa->xul_clip) &&
+					(x <= rmi4_data->clipa->xbr_clip) &&
+					(y >= rmi4_data->clipa->yul_clip) &&
+					(y <= rmi4_data->clipa->ybr_clip);
+
+				if (!inside) {
+					dev_dbg(&rmi4_data->i2c_client->dev,
+						"%d,%d ouside clipping area\n",
+						x, y);
+					input_mt_report_slot_state(
+						rmi4_data->input_dev,
+						MT_TOOL_FINGER, 0);
+					continue;
+				}
+			}
+
 #ifdef CONFIG_TOUCHSCREEN_TOUCHX_BASE
 			touchxp.touch_magic_dev = rmi4_data->input_dev;
 			if (touchxp.touchx)
@@ -6182,12 +6223,14 @@ static int folio_notifier_callback(struct notifier_block *self,
 			synaptics_dsx_state_name(state), state,
 			atomic_read(&rmi4_data->touch_stopped),
 			rmi4_data->in_bootloader);
-		if (folio_state)
-			/* close */
+		if (folio_state) {/* close */
+			rmi4_data->clipping_on = true;
 			synaptics_dsx_set_alternate_mode(rmi4_data,
 				rmi4_data->alternate_mode, false, true);
-		else	/* open */
+		} else {/* open */
+			rmi4_data->clipping_on = false;
 			synaptics_dsx_restore_default_mode(rmi4_data);
+		}
 
 		dev_info(&rmi4_data->i2c_client->dev, "folio: %s\n",
 			folio_state ? "CLOSED" : "OPENED");
diff --git a/drivers/input/touchscreen/synaptics_dsx_i2c.h b/drivers/input/touchscreen/synaptics_dsx_i2c.h
index ac6e59f7d92..4af71247267 100644
--- a/drivers/input/touchscreen/synaptics_dsx_i2c.h
+++ b/drivers/input/touchscreen/synaptics_dsx_i2c.h
@@ -382,6 +382,10 @@ struct synaptics_rmi4_func_packet_regs {
 	struct synaptics_rmi4_packet_reg *regs;
 };
 
+struct synaptics_clip_area {
+	unsigned xul_clip, yul_clip, xbr_clip, ybr_clip;
+};
+
 /*
  * struct synaptics_rmi4_data - rmi4 device instance data
  * @i2c_client: pointer to associated i2c client
@@ -497,6 +501,8 @@ struct synaptics_rmi4_data {
 #if defined(USB_CHARGER_DETECTION)
 	struct power_supply psy;
 #endif
+	bool clipping_on;
+	struct synaptics_clip_area *clipa;
 };
 
 struct time_keeping {
-- 
2.11.0

