From caf190f3e4001d7cdaf5dbc54202af8aa140a754 Mon Sep 17 00:00:00 2001
From: Xuehui Ye <yexh1@motorola.com>
Date: Fri, 4 Mar 2016 10:36:12 +0800
Subject: [PATCH 743/959] IKSWM-23670: usb: phy-msm-usb: Skip ULPI read/writes
 if in lpm

When the PHY is in lpm, bail out on ULPI read/writes triggered from
external locations (other than the PHY driver). This avoids unclocked
access to ulpi registers.

Change-Id: I75cccda6f9200d3a8099155dc041438d228aeed2
Signed-off-by: Xuehui Ye <yexh1@motorola.com>
Reviewed-on: http://gerrit.mot.com/829067
SME-Granted: SME Approvals Granted
SLTApproved: Slta Waiver <sltawvr@motorola.com>
Tested-by: Jira Key <jirakey@motorola.com>
Reviewed-by: Ravikumar Vembu <raviv@motorola.com>
Submit-Approved: Jira Key <jirakey@motorola.com>
---
 drivers/usb/phy/phy-msm-usb.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/drivers/usb/phy/phy-msm-usb.c b/drivers/usb/phy/phy-msm-usb.c
index e559be7f37a..f78489e3448 100644
--- a/drivers/usb/phy/phy-msm-usb.c
+++ b/drivers/usb/phy/phy-msm-usb.c
@@ -404,6 +404,11 @@ static int ulpi_read(struct usb_phy *phy, u32 reg)
 	struct msm_otg *motg = container_of(phy, struct msm_otg, phy);
 	int cnt = 0;
 
+	if (motg->lpm_flags) {
+		dev_err(phy->dev, "ulpi_read: phy in lpm\n");
+		return -ENODEV;
+	}
+
 	if (motg->pdata->emulation)
 		return 0;
 
@@ -440,6 +445,11 @@ static int ulpi_write(struct usb_phy *phy, u32 val, u32 reg)
 	struct msm_otg *motg = container_of(phy, struct msm_otg, phy);
 	int cnt = 0;
 
+	if (motg->lpm_flags) {
+		dev_err(phy->dev, "ulpi_write: phy in lpm\n");
+		return -ENODEV;
+	}
+
 	if (motg->pdata->emulation)
 		return 0;
 
-- 
2.11.0

