From 6701bcce7a65b9d7018593a5646ad6263a1ab559 Mon Sep 17 00:00:00 2001
From: Alexander Filonenko <alexf@motorola.com>
Date: Wed, 19 Aug 2015 15:30:34 -0500
Subject: [PATCH 554/959] IKSWM-13987 of: checking for conditional status

Change checking for status property to support
conditinal content.

Change-Id: I801090be0c0a2fd8c51bea0cbb4a708d929bb683
Signed-off-by: Alexander Filonenko <alexf@motorola.com>
Reviewed-on: http://gerrit.mot.com/806734
SME-Granted: SME Approvals Granted
SLTApproved: Slta Waiver <sltawvr@motorola.com>
Tested-by: Jira Key <jirakey@motorola.com>
Reviewed-by: Igor Kovalenko <igork@motorola.com>
Submit-Approved: Jira Key <jirakey@motorola.com>
---
 scripts/dtc/checks.c | 23 +++++++++++++++++++++--
 1 file changed, 21 insertions(+), 2 deletions(-)

diff --git a/scripts/dtc/checks.c b/scripts/dtc/checks.c
index ee96a2519ef..9ee3aa1d540 100644
--- a/scripts/dtc/checks.c
+++ b/scripts/dtc/checks.c
@@ -208,6 +208,25 @@ static void check_is_string(struct check *c, struct node *root,
 		FAIL(c, "\"%s\" property in %s is not a string",
 		     propname, node->fullpath);
 }
+
+static void check_is_null_terminated(struct check *c, struct node *root,
+			    struct node *node)
+{
+	struct property *prop;
+	char *propname = c->data;
+
+	prop = get_property(node, propname);
+	if (!prop)
+		return; /* Not present, assumed ok */
+
+	if (prop->val.val[prop->val.len-1] != '\0')
+		FAIL(c, "\"%s\" property in %s is not null terminated",
+		     propname, node->fullpath);
+}
+#define WARNING_IF_NOT_NULL_TERMINATED(nm, propname) \
+	WARNING(nm, NULL, check_is_null_terminated, NULL, (propname))
+#define ERROR_IF_NOT_NULL_TERMINATED(nm, propname) \
+	ERROR(nm, NULL, check_is_null_terminated, NULL, (propname))
 #define WARNING_IF_NOT_STRING(nm, propname) \
 	WARNING(nm, NULL, check_is_string, NULL, (propname))
 #define ERROR_IF_NOT_STRING(nm, propname) \
@@ -511,7 +530,7 @@ WARNING_IF_NOT_CELL(interrupt_cells_is_cell, "#interrupt-cells");
 
 WARNING_IF_NOT_STRING(device_type_is_string, "device_type");
 WARNING_IF_NOT_STRING(model_is_string, "model");
-WARNING_IF_NOT_STRING(status_is_string, "status");
+WARNING_IF_NOT_NULL_TERMINATED(status_is_null_terminated, "status");
 
 static void fixup_addr_size_cells(struct check *c, struct node *dt,
 				  struct node *node)
@@ -662,7 +681,7 @@ static struct check *check_table[] = {
 	&phandle_references, &path_references,
 
 	&address_cells_is_cell, &size_cells_is_cell, &interrupt_cells_is_cell,
-	&device_type_is_string, &model_is_string, &status_is_string,
+	&device_type_is_string, &model_is_string, &status_is_null_terminated,
 
 	&addr_size_cells, &reg_format, &ranges_format,
 
-- 
2.11.0

