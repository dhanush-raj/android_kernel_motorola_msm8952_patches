From f0d55eb79cea3273c0c798312d47aa8eaf04ad24 Mon Sep 17 00:00:00 2001
From: Zac Crosby <zac@motorola.com>
Date: Fri, 11 Sep 2015 08:54:06 -0500
Subject: [PATCH 168/959] IKKRNBSP-3414 msm: mdss: Check panel power mode
 during resume

Check panel's power mode to make sure the panel is on at the end of
the panel resume.

Port of 8328f50 from 8996.

Change-Id: I926d78321e6d22a0f422c4b22d57ecdf0aa5d5af
Signed-off-by: Shiyong Li <a22381@motorola.com>
Reviewed-on: http://gerrit.mot.com/785861
SLTApproved: Slta Waiver <sltawvr@motorola.com>
SME-Granted: SME Approvals Granted
Tested-by: Jira Key <jirakey@motorola.com>
Reviewed-by: Zachary Crosby <zac@motorola.com>
Reviewed-by: Joseph Swantek <jswantek@motorola.com>
Submit-Approved: Jira Key <jirakey@motorola.com>
---
 drivers/video/msm/mdss/mdss_dsi_panel.c | 60 ++++++++++++++++++++++++++++++++-
 drivers/video/msm/mdss/mdss_panel.h     |  2 ++
 2 files changed, 61 insertions(+), 1 deletion(-)

diff --git a/drivers/video/msm/mdss/mdss_dsi_panel.c b/drivers/video/msm/mdss/mdss_dsi_panel.c
index 50cb1212213..68609cd24b8 100644
--- a/drivers/video/msm/mdss/mdss_dsi_panel.c
+++ b/drivers/video/msm/mdss/mdss_dsi_panel.c
@@ -33,6 +33,7 @@
 #define DT_CMD_HDR 6
 #define MIN_REFRESH_RATE 48
 #define DEFAULT_MDP_TRANSFER_TIME 14000
+#define DCS_CMD_GET_POWER_MODE 0x0A
 
 DEFINE_LED_TRIGGER(bl_led_trigger);
 
@@ -393,6 +394,34 @@ gpio_err:
 	return rc;
 }
 
+static int mdss_dsi_get_pwr_mode(struct mdss_panel_data *pdata,
+			u8 *pwr_mode, bool hs_mode)
+{
+	struct mdss_dsi_ctrl_pdata *ctrl;
+	struct dcs_cmd_req cmdreq;
+
+	ctrl = container_of(pdata, struct mdss_dsi_ctrl_pdata, panel_data);
+
+	dcs_cmd[0] = DCS_CMD_GET_POWER_MODE;
+	dcs_cmd[1] = 0x00;
+	memset(&cmdreq, 0, sizeof(cmdreq));
+	cmdreq.cmds = &dcs_read_cmd;
+	cmdreq.cmds_cnt = 1;
+	cmdreq.flags = CMD_REQ_RX | CMD_REQ_COMMIT;
+	if (hs_mode)
+		cmdreq.flags |= CMD_REQ_HS_MODE;
+	cmdreq.rlen = 1;
+	cmdreq.rbuf = pwr_mode;
+	cmdreq.cb = NULL; /* call back */
+
+	if (mdss_dsi_cmdlist_put(ctrl, &cmdreq) != cmdreq.rlen)
+		pr_warn("%s: failed to read panel power mode\n", __func__);
+
+	pr_debug("%s: panel power mode = 0x%x\n", __func__, *pwr_mode);
+
+	return 0;
+}
+
 /**
  * mdss_dsi_roi_merge() -  merge two roi into single roi
  *
@@ -757,6 +786,7 @@ static int mdss_dsi_panel_on(struct mdss_panel_data *pdata)
 	struct mdss_panel_info *pinfo;
 	struct dsi_panel_cmds *on_cmds;
 	int ret = 0;
+	u8 pwr_mode = 0;
 
 	if (pdata == NULL) {
 		pr_err("%s: Invalid input data\n", __func__);
@@ -774,6 +804,11 @@ static int mdss_dsi_panel_on(struct mdss_panel_data *pdata)
 			goto end;
 	}
 
+	if (ctrl->panel_config.bare_board) {
+		pr_warn("%s: This is bare_board configuration\n", __func__);
+		goto end;
+	}
+
 	on_cmds = &ctrl->on_cmds;
 
 	if ((pinfo->mipi.dms_mode == DYNAMIC_MODE_SWITCH_IMMEDIATE) &&
@@ -787,8 +822,18 @@ static int mdss_dsi_panel_on(struct mdss_panel_data *pdata)
 
 	if (ctrl->ds_registered)
 		mdss_dba_utils_video_on(pinfo->dba_data, pinfo);
+
+	mdss_dsi_get_pwr_mode(pdata, &pwr_mode, false);
+	if (pinfo->disp_on_check_val != pwr_mode)
+		pr_err("%s: Display failure: read = 0x%x, expected = 0x%x\n",
+			__func__, pwr_mode, pinfo->disp_on_check_val);
 end:
-	pr_info("%s[%d]-.\n", __func__, ctrl->ndx);
+	if (!ctrl->ndx)
+		pr_info("%s[%d]-. Pwr_mode(0x0A) = 0x%x\n", __func__,
+			ctrl->ndx, pwr_mode);
+	else
+		pr_info("%s[%d]-.\n", __func__, ctrl->ndx);
+
 	pr_debug("%s:-\n", __func__);
 	return ret;
 }
@@ -1726,6 +1771,7 @@ static int mdss_dsi_parse_panel_features(struct device_node *np,
 {
 	struct mdss_panel_info *pinfo;
 	struct mdss_panel_config *pcfg;
+	int rc;
 
 	if (!np || !ctrl) {
 		pr_err("%s: Invalid arguments\n", __func__);
@@ -1779,6 +1825,18 @@ static int mdss_dsi_parse_panel_features(struct device_node *np,
 		pinfo->esd_check_enabled = false;
 	}
 
+	rc = of_property_read_u32(np,
+				"qcom,mdss-dsi-panel-on-check-value",
+				&pinfo->disp_on_check_val);
+	if (rc) {
+		if (ctrl->status_cmds_rlen == 1 &&
+			ctrl->status_value &&
+			ctrl->status_value[0] != 0)
+			pinfo->disp_on_check_val = ctrl->status_value[0];
+		else
+			pinfo->disp_on_check_val = 0x9c;
+	}
+
 	if (ctrl->disp_en_gpio <= 0) {
 		ctrl->disp_en_gpio = of_get_named_gpio(
 			np,
diff --git a/drivers/video/msm/mdss/mdss_panel.h b/drivers/video/msm/mdss/mdss_panel.h
index 50d23eb3051..804e5f6d001 100644
--- a/drivers/video/msm/mdss/mdss_panel.h
+++ b/drivers/video/msm/mdss/mdss_panel.h
@@ -592,6 +592,8 @@ struct mdss_panel_info {
 	bool is_dba_panel;
 	/* debugfs structure for the panel */
 	struct mdss_panel_debugfs_info *debugfs_info;
+
+	u32 disp_on_check_val;
 };
 
 struct mdss_panel_timing {
-- 
2.11.0

