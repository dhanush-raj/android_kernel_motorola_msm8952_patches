From 31f9b99b100054ded772ebf0ec279904264cde74 Mon Sep 17 00:00:00 2001
From: yangjq <yangjq@lenovo.com>
Date: Tue, 17 Nov 2015 17:40:13 +0800
Subject: [PATCH 530/959] IKKRNBSP-3527 pinctrl: msm: Add sysfs node for debug

Add sysfs node /sys/private/tlmm

Change-Id: I9c45bb37bcc3c719fb92081772f86d271173246d
Signed-off-by: yangjq <yangjq@lenovo.com>
Reviewed-on: http://gerrit.mot.com/800581
SLTApproved: Slta Waiver <sltawvr@motorola.com>
SME-Granted: SME Approvals Granted
Tested-by: Jira Key <jirakey@motorola.com>
Reviewed-by: Ravi Chebolu <arc095@motorola.com>
Reviewed-by: Igor Kovalenko <igork@motorola.com>
Submit-Approved: Jira Key <jirakey@motorola.com>
---
 drivers/pinctrl/pinctrl-msm-tlmm.c | 90 ++++++++++++++++++++++++++++++++++++++
 1 file changed, 90 insertions(+)

diff --git a/drivers/pinctrl/pinctrl-msm-tlmm.c b/drivers/pinctrl/pinctrl-msm-tlmm.c
index 069a0e54730..63f8fb3a6f9 100644
--- a/drivers/pinctrl/pinctrl-msm-tlmm.c
+++ b/drivers/pinctrl/pinctrl-msm-tlmm.c
@@ -168,6 +168,23 @@
 #define TLMMV4_QDSD_CONFIG_WIDTH		0x5
 #define TLMMV4_QDSD_DRV_MASK			0x7
 
+/**
+ * extract GPIO pin from bit-field used for gpio_tlmm_config
+ */
+#define GPIO_PIN(gpio_cfg)    (((gpio_cfg) >>  4) & 0x3ff)
+#define GPIO_FUNC(gpio_cfg)   (((gpio_cfg) >>  0) & 0xf)
+#define GPIO_DIR(gpio_cfg)    (((gpio_cfg) >> 14) & 0x1)
+#define GPIO_PULL(gpio_cfg)   (((gpio_cfg) >> 15) & 0x3)
+#define GPIO_DRVSTR(gpio_cfg) (((gpio_cfg) >> 17) & 0xf)
+
+#define GPIO_CFG(gpio, func, dir, pull, drvstr) \
+	((((gpio) & 0x3FF) << 4)        |	  \
+	 ((func) & 0xf)                  |	  \
+	 (((dir) & 0x1) << 14)           |	  \
+	 (((pull) & 0x3) << 15)          |	  \
+	 (((drvstr) & 0xF) << 17))
+
+static struct msm_pintype_info *tlmm_pininfo_gp;
 struct msm_sdc_regs {
 	unsigned long pull_mask;
 	unsigned long pull_shft;
@@ -648,6 +665,76 @@ static void msm_tlmm_gp_set(struct gpio_chip *gc, unsigned offset, int val)
 	writel_relaxed(val ? BIT(GPIO_OUT_BIT) : 0, inout_reg);
 }
 
+int tlmm_get_inout(unsigned gpio)
+{
+	void __iomem *inout_reg = TLMM_GP_INOUT(tlmm_pininfo_gp, gpio);
+
+	if (tlmm_pininfo_gp == NULL)
+		return -EINVAL;
+	if (gpio >= tlmm_pininfo_gp->num_pins)
+		return -EINVAL;
+	return readl_relaxed(inout_reg) & BIT(GPIO_IN_BIT);
+}
+
+int tlmm_set_inout(unsigned gpio, unsigned val)
+{
+	void __iomem *inout_reg = TLMM_GP_INOUT(tlmm_pininfo_gp, gpio);
+
+	if (tlmm_pininfo_gp == NULL)
+		return -EINVAL;
+	if (gpio >= tlmm_pininfo_gp->num_pins)
+		return -EINVAL;
+	writel_relaxed(val ? BIT(GPIO_OUT_BIT) : 0, inout_reg);
+
+	return 0;
+}
+
+int tlmm_get_config(unsigned gpio, unsigned *cfg)
+{
+	unsigned flags;
+
+	if (tlmm_pininfo_gp == NULL)
+		return -EINVAL;
+	if (gpio >= tlmm_pininfo_gp->num_pins)
+		return -EINVAL;
+
+	flags = readl_relaxed(TLMM_GP_CFG(tlmm_pininfo_gp, gpio));
+	pr_debug("%s(), %d, flags=%x\n", __func__, __LINE__, flags);
+	*cfg = GPIO_CFG(gpio, (flags >> TLMM_GP_FUNC_SHFT) & 0xf,
+		(flags >> TLMM_GP_DIR_SHFT) & 0x1, flags & 0x3,
+		(flags >> TLMM_GP_DRV_SHFT) & 0x7);
+
+	return 0;
+}
+
+int tlmm_set_config(unsigned config)
+{
+	unsigned int flags;
+	unsigned gpio = GPIO_PIN(config);
+	void __iomem *cfg_reg = TLMM_GP_CFG(tlmm_pininfo_gp, gpio);
+
+	if (tlmm_pininfo_gp == NULL)
+		return -EINVAL;
+	if (gpio >= tlmm_pininfo_gp->num_pins)
+		return -EINVAL;
+
+	pr_debug("%s(), %d,gpio=%d\n", __func__, __LINE__, gpio);
+
+	config = (config & ~0x40000000);
+	flags = readl_relaxed(cfg_reg);
+	pr_debug("%s(), %d, flags=%x\n", __func__, __LINE__, flags);
+
+	flags = ((GPIO_DIR(config) & TLMM_GP_DIR_MASK) << TLMM_GP_DIR_SHFT) |
+		((GPIO_DRVSTR(config) & TLMM_GP_DRV_MASK) << TLMM_GP_DRV_SHFT) |
+		((GPIO_FUNC(config) & TLMM_GP_FUNC_MASK) << TLMM_GP_FUNC_SHFT) |
+		((GPIO_PULL(config) & TLMM_GP_PULL_MASK));
+
+	pr_debug("%s(), %d, flags=%x\n", __func__, __LINE__, flags);
+	writel_relaxed(flags, cfg_reg);
+
+	return 0;
+}
+
 static int msm_tlmm_gp_dir_in(struct gpio_chip *gc, unsigned offset)
 {
 	unsigned int val;
@@ -1242,6 +1329,9 @@ static int msm_tlmm_probe(struct platform_device *pdev)
 		tlmm_pininfo[i].pintype_data = pintype_data[i];
 	tlmm_desc->pintypes = tlmm_pininfo;
 	tlmm_desc->num_pintypes = ARRAY_SIZE(tlmm_pininfo);
+	/* Add sysfs for gpio's debug */
+	tlmm_pininfo_gp = &tlmm_pininfo[MSM_PINTYPE_GP];
+	pr_debug("%s(), tlmm_pininfo_gp=%p\n", __func__, tlmm_pininfo_gp);
 	return msm_pinctrl_probe(pdev, tlmm_desc);
 }
 
-- 
2.11.0

