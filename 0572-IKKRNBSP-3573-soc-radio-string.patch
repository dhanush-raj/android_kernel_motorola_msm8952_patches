From d575263e222f4161b6aca5f63b154669195a0643 Mon Sep 17 00:00:00 2001
From: Alexander Filonenko <alexf@motorola.com>
Date: Fri, 18 Dec 2015 11:58:27 -0600
Subject: [PATCH 572/959] IKKRNBSP-3573 soc: radio string

Support radio value in string format.

Change-Id: I1c16b0465a3cc78aa63787f9e1147982c9e9dc98
Signed-off-by: Alexander Filonenko <alexf@motorola.com>
Reviewed-on: http://gerrit.mot.com/808664
SME-Granted: SME Approvals Granted
SLTApproved: Slta Waiver <sltawvr@motorola.com>
Tested-by: Jira Key <jirakey@motorola.com>
Reviewed-by: Jibu Joseph <w00168@motorola.com>
Reviewed-by: Igor Kovalenko <igork@motorola.com>
Submit-Approved: Jira Key <jirakey@motorola.com>
---
 drivers/soc/qcom/mmi-unit-info.c | 26 +++++++++++++++++---------
 drivers/soc/qcom/mmi-unit-info.h |  2 ++
 2 files changed, 19 insertions(+), 9 deletions(-)

diff --git a/drivers/soc/qcom/mmi-unit-info.c b/drivers/soc/qcom/mmi-unit-info.c
index 330f4ee775a..cbb9008f2ae 100644
--- a/drivers/soc/qcom/mmi-unit-info.c
+++ b/drivers/soc/qcom/mmi-unit-info.c
@@ -64,12 +64,16 @@ int __init setup_androidboot_device_init(char *s)
 __setup("androidboot.device=", setup_androidboot_device_init);
 
 static unsigned int androidboot_radio;
+static char androidboot_radio_str[RADIO_MAX_LEN];
 int __init setup_androidboot_radio_init(char *s)
 {
 	int retval = kstrtouint(s, 16, &androidboot_radio);
 
-	if (retval < 0)
-		return 0;
+	if (retval < 0) {
+		androidboot_radio = 0;
+	}
+
+	strlcpy(androidboot_radio_str, s, RADIO_MAX_LEN);
 
 	return 1;
 }
@@ -93,8 +97,8 @@ void mach_cpuinfo_show(struct seq_file *m, void *v)
 	/* Zero is not a valid "Radio" value.      */
 	/* Lack of "Radio" entry in cpuinfo means: */
 	/*	look for radio in "Revision"       */
-	if (androidboot_radio)
-		seq_printf(m, "Radio\t\t: %x\n", androidboot_radio);
+	if (strnlen(androidboot_radio_str, RADIO_MAX_LEN))
+		seq_printf(m, "Radio\t\t: %s\n", androidboot_radio_str);
 
 	seq_printf(m, "MSM Hardware\t: %s\n", msm_hw);
 }
@@ -165,15 +169,19 @@ static int __init mmi_unit_info_init(void)
 	strlcpy(mui_copy->carrier, carrier, CARRIER_MAX_LEN);
 	strlcpy(mui_copy->device, androidboot_device, DEVICE_MAX_LEN);
 	mui_copy->radio = androidboot_radio;
+	strlcpy(mui_copy->radio_str, androidboot_radio_str, RADIO_MAX_LEN);
 	mui_copy->powerup_reason = bi_powerup_reason();
 
 	pr_info("mmi_unit_info (SMEM) for modem: version = 0x%02x,"
-		" device = '%s', radio = %d, system_rev = 0x%04x,"
-		" system_serial = 0x%08x%08x, machine = '%s',"
-		" barcode = '%s', baseband = '%s', carrier = '%s'"
-		" pu_reason = 0x%08x\n",
+		" device = '%s', radio = 0x%x, radio_str = '%s',"
+		" system_rev = 0x%04x, system_serial = 0x%08x%08x,"
+		" machine = '%s', barcode = '%s', baseband = '%s',"
+		" carrier = '%s', pu_reason = 0x%08x\n",
 		mui_copy->version,
-		mui_copy->device, mui_copy->radio, mui_copy->system_rev,
+		mui_copy->device,
+		mui_copy->radio,
+		mui_copy->radio_str,
+		mui_copy->system_rev,
 		mui_copy->system_serial_high, mui_copy->system_serial_low,
 		mui_copy->machine, mui_copy->barcode,
 		mui_copy->baseband, mui_copy->carrier,
diff --git a/drivers/soc/qcom/mmi-unit-info.h b/drivers/soc/qcom/mmi-unit-info.h
index 05a673eb171..d41b8ec136d 100644
--- a/drivers/soc/qcom/mmi-unit-info.h
+++ b/drivers/soc/qcom/mmi-unit-info.h
@@ -21,6 +21,7 @@
 #define BASEBAND_MAX_LEN 97
 #define MSMHW_MAX_LEN 32
 #define DEVICE_MAX_LEN 33
+#define RADIO_MAX_LEN 33
 struct mmi_unit_info {
 	uint32_t version;
 	uint32_t system_rev;
@@ -33,6 +34,7 @@ struct mmi_unit_info {
 	char device[DEVICE_MAX_LEN];
 	uint32_t radio;
 	uint32_t powerup_reason;
+	char radio_str[RADIO_MAX_LEN];
 };
 
 /* Function that sets the modem reset value in the SMEM location
-- 
2.11.0

