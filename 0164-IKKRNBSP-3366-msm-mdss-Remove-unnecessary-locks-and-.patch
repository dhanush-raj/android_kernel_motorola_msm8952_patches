From 8e76b51d2e7ceecf7c54c071678c0ed8e97565be Mon Sep 17 00:00:00 2001
From: Zac Crosby <zac@motorola.com>
Date: Mon, 11 Aug 2014 18:16:58 -0500
Subject: [PATCH 164/959] IKKRNBSP-3366: msm: mdss: Remove unnecessary locks
 and waits from ESD check

The wait for pingpong is only necessary if using the method of triggering
BTA to check the panel status.  Since we don't use this method, the wait
for pingpong can be removed.

Since we don't need to wait for pingpong, it is ok to remove the lock of
mdp5_data->ov_lock and allow new frames to be submitted during the status
check.  All locking necessary for sending commands for the status check
while continuing to send new frames is already handled.

'commit 5ab5ced6e0fe ("IKKRNBSP-2622: msm: mdss: Remove unnecessary
locks and waits from ESD check")'
Signed-off-by: Zac Crosby <zac@motorola.com>
Signed-off-by: Parasuraman <parasur@motorola.com>
Change-Id: I17a1b8bc1ed5dbb95c8e6d9aef96c4d024a1b044
Reviewed-on: http://gerrit.mot.com/784117
SLTApproved: Slta Waiver <sltawvr@motorola.com>
SME-Granted: SME Approvals Granted
Tested-by: Jira Key <jirakey@motorola.com>
Reviewed-by: Shi-Yong Li <a22381@motorola.com>
Reviewed-by: Bang Nguyen <bangnguyen@motorola.com>
Reviewed-by: Joseph Swantek <jswantek@motorola.com>
Submit-Approved: Jira Key <jirakey@motorola.com>
---
 drivers/video/msm/mdss/dsi_status_6g.c | 15 +++++++++------
 1 file changed, 9 insertions(+), 6 deletions(-)

diff --git a/drivers/video/msm/mdss/dsi_status_6g.c b/drivers/video/msm/mdss/dsi_status_6g.c
index ceb73fcc6bc..f7f4430808b 100644
--- a/drivers/video/msm/mdss/dsi_status_6g.c
+++ b/drivers/video/msm/mdss/dsi_status_6g.c
@@ -125,14 +125,15 @@ void mdss_check_dsi_ctrl_status(struct work_struct *work, uint32_t interval)
 	 * overlay operations. Need refine this lock for command mode
 	 */
 
-	if (mipi->mode == DSI_CMD_MODE)
+	if (mipi->mode == DSI_CMD_MODE && ctrl_pdata->status_mode == ESD_BTA)
 		mutex_lock(&mdp5_data->ov_lock);
 	mutex_lock(&ctl->offlock);
 
 	if (mdss_panel_is_power_off(pstatus_data->mfd->panel_power_state) ||
 			pstatus_data->mfd->shutdown_pending) {
 		mutex_unlock(&ctl->offlock);
-		if (mipi->mode == DSI_CMD_MODE)
+		if (mipi->mode == DSI_CMD_MODE &&
+				ctrl_pdata->status_mode == ESD_BTA)
 			mutex_unlock(&mdp5_data->ov_lock);
 		pr_err("%s: DSI turning off, avoiding panel status check\n",
 							__func__);
@@ -149,17 +150,19 @@ void mdss_check_dsi_ctrl_status(struct work_struct *work, uint32_t interval)
 	 * display reset not to be proper. Hence, wait for DMA_P done
 	 * for command mode panels before triggering BTA.
 	 */
-	if (ctl->ops.wait_pingpong)
-		ctl->ops.wait_pingpong(ctl, NULL);
+	if (ctrl_pdata->status_mode == ESD_BTA) {
+		if (ctl->ops.wait_pingpong)
+			ctl->ops.wait_pingpong(ctl, NULL);
 
-	pr_debug("%s: DSI ctrl wait for ping pong done\n", __func__);
+		pr_debug("%s: DSI ctrl wait for ping pong done\n", __func__);
+	}
 
 	mdss_mdp_clk_ctrl(MDP_BLOCK_POWER_ON);
 	ret = ctrl_pdata->check_status(ctrl_pdata);
 	mdss_mdp_clk_ctrl(MDP_BLOCK_POWER_OFF);
 
 	mutex_unlock(&ctl->offlock);
-	if (mipi->mode == DSI_CMD_MODE)
+	if (mipi->mode == DSI_CMD_MODE && ctrl_pdata->status_mode == ESD_BTA)
 		mutex_unlock(&mdp5_data->ov_lock);
 
 	if ((pstatus_data->mfd->panel_power_state == MDSS_PANEL_POWER_ON)) {
-- 
2.11.0

