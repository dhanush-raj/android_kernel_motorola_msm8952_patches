From 138af7bfab804fbd278eb39b08a8338b10e8d5b5 Mon Sep 17 00:00:00 2001
From: Robert Wiegand <qa2113@motorola.com>
Date: Wed, 18 Mar 2015 12:54:30 -0500
Subject: [PATCH 125/959] IKLOCSEN-2076 drivers/misc/stml0xx: New Sensor Hub
 reset design

Support the new hardware design for the AP to Sensor Hub reset
that removes the FET.

Change-Id: I778664801e16c8b46402d1f5c72c357e571562ef
Signed-off-by: Robert Wiegand <qa2113@motorola.com>
Reviewed-on: http://gerrit.mot.com/726309
SLTApproved: Slta Waiver <sltawvr@motorola.com>
SME-Granted: SME Approvals Granted
Reviewed-by: Jeffrey Carlyle <jeff.carlyle@motorola.com>
Reviewed-by: Daniel Moore <dtmoore@motorola.com>
Tested-by: Jira Key <jirakey@motorola.com>
Submit-Approved: Jira Key <jirakey@motorola.com>
---
 drivers/misc/stml0xx/stml0xx_core.c  | 15 ++++++++++++---
 drivers/misc/stml0xx/stml0xx_reset.c |  7 +++++++
 include/linux/stml0xx.h              |  1 +
 3 files changed, 20 insertions(+), 3 deletions(-)

diff --git a/drivers/misc/stml0xx/stml0xx_core.c b/drivers/misc/stml0xx/stml0xx_core.c
index 881a4e449af..f909f2b9106 100644
--- a/drivers/misc/stml0xx/stml0xx_core.c
+++ b/drivers/misc/stml0xx/stml0xx_core.c
@@ -386,6 +386,10 @@ static struct stml0xx_platform_data *stml0xx_of_init(struct spi_device *spi)
 	of_property_read_u32(np, "bslen_pin_active_value",
 			     &pdata->bslen_pin_active_value);
 
+	pdata->reset_hw_type = 0;
+	of_property_read_u32(np, "reset_hw_type",
+		&pdata->reset_hw_type);
+
 	of_get_property(np, "stml0xx_fw_version", &len);
 	if (!of_property_read_string(np, "stml0xx_fw_version", &name))
 		strlcpy(pdata->fw_version, name, FW_VERSION_SIZE);
@@ -512,9 +516,14 @@ static int stml0xx_gpio_init(struct stml0xx_platform_data *pdata,
 			"stml0xx reset gpio_request failed: %d", err);
 		goto free_int;
 	}
-	gpio_direction_output(pdata->gpio_reset, 1);
-	gpio_set_value(pdata->gpio_reset, 1);
-	err = gpio_export(pdata->gpio_reset, 0);
+	if (pdata->reset_hw_type == 0) {
+		gpio_direction_output(pdata->gpio_reset, 1);
+		gpio_set_value(pdata->gpio_reset, 1);
+		err = gpio_export(pdata->gpio_reset, 0);
+	} else {
+		gpio_direction_input(pdata->gpio_reset);
+		err = gpio_export(pdata->gpio_reset, 1);
+	}
 	if (err) {
 		dev_err(&stml0xx_misc_data->spi->dev,
 			"reset gpio_export failed: %d", err);
diff --git a/drivers/misc/stml0xx/stml0xx_reset.c b/drivers/misc/stml0xx/stml0xx_reset.c
index 3c113b0796f..2ae2abf3662 100644
--- a/drivers/misc/stml0xx/stml0xx_reset.c
+++ b/drivers/misc/stml0xx/stml0xx_reset.c
@@ -47,11 +47,18 @@ void stml0xx_reset(struct stml0xx_platform_data *pdata)
 {
 	dev_err(&stml0xx_misc_data->spi->dev, "stml0xx_reset");
 	stml0xx_g_booted = 0;
+
+	if (pdata->reset_hw_type != 0)
+		gpio_direction_output(pdata->gpio_reset, 1);
+
 	msleep(stml0xx_spi_retry_delay);
 	gpio_set_value(pdata->gpio_reset, 0);
 	msleep(stml0xx_spi_retry_delay);
 	gpio_set_value(pdata->gpio_reset, 1);
 	msleep(STML0XX_RESET_DELAY);
+
+	if (pdata->reset_hw_type != 0)
+		gpio_direction_input(pdata->gpio_reset);
 }
 
 void stml0xx_initialize_work_func(struct work_struct *work)
diff --git a/include/linux/stml0xx.h b/include/linux/stml0xx.h
index e9b93dd6755..70e3f765380 100644
--- a/include/linux/stml0xx.h
+++ b/include/linux/stml0xx.h
@@ -614,6 +614,7 @@ struct stml0xx_platform_data {
 	int gpio_spi_ready_for_receive;
 	int gpio_spi_data_ack;
 	unsigned int bslen_pin_active_value;
+	unsigned int reset_hw_type;
 	u16 lux_table[LIGHTING_TABLE_SIZE];
 	u8 brightness_table[LIGHTING_TABLE_SIZE];
 	char fw_version[FW_VERSION_SIZE];
-- 
2.11.0

