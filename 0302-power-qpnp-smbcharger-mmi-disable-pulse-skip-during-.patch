From 603e100bcdb9e07ea3e5d368e4e39d89d2df3553 Mon Sep 17 00:00:00 2001
From: Xiaozhe Shi <xiaozhes@codeaurora.org>
Date: Fri, 26 Jun 2015 14:10:50 -0700
Subject: [PATCH 302/959] power: qpnp-smbcharger-mmi: disable pulse skip during
 OTG

The charger pulse skip mode can cause drastic dips on VBUS when OTG is
enabled. This dip can cause a glitch in the fuel gauge and lock up the
entire peripheral.

Disable the pulse skip mode before enabling OTG and only reenable it after
OTG is disabled.

CRs-Fixed: 862602
Change-Id: Ifb0df393db4a03020a5753aa5d92dfa796e3bd86
Signed-off-by: Xiaozhe Shi <xiaozhes@codeaurora.org>
---
 drivers/power/qpnp-smbcharger-mmi.c | 48 +++++++++++++++++++++----------------
 1 file changed, 28 insertions(+), 20 deletions(-)

diff --git a/drivers/power/qpnp-smbcharger-mmi.c b/drivers/power/qpnp-smbcharger-mmi.c
index e80ef665140..428542fb099 100644
--- a/drivers/power/qpnp-smbcharger-mmi.c
+++ b/drivers/power/qpnp-smbcharger-mmi.c
@@ -183,7 +183,7 @@ struct smbchg_chip {
 	bool				safety_timer_en;
 	bool				aicl_complete;
 	bool				usb_ov_det;
-	bool				otg_pulse_skip_en;
+	bool				otg_pulse_skip_dis;
 	u32				wa_flags;
 
 	/* jeita and temperature */
@@ -2970,37 +2970,40 @@ static int smbchg_safety_timer_enable(struct smbchg_chip *chip, bool enable)
 	return 0;
 }
 
+enum skip_reason {
+	REASON_OTG_ENABLED	= BIT(0),
+	REASON_FLASH_ENABLED	= BIT(1)
+};
+
 #define OTG_TRIM6		0xF6
 #define TR_ENB_SKIP_BIT		BIT(2)
 #define OTG_EN_BIT		BIT(0)
-static int smbchg_otg_pulse_skip_enable(struct smbchg_chip *chip, bool enable)
+static int smbchg_otg_pulse_skip_disable(struct smbchg_chip *chip,
+				enum skip_reason reason, bool disable)
 {
 	int rc;
-	u8 reg;
-
-	if (enable == chip->otg_pulse_skip_en)
-		return 0;
+	bool disabled;
 
-	rc = smbchg_read(chip, &reg, chip->bat_if_base + CMD_CHG_REG, 1);
-	if (rc < 0) {
-		dev_err(chip->dev,
-				"Couldn't read OTG enable bit rc=%d\n", rc);
-		return rc;
-	}
-
-	/* If OTG is not enabled, don't set OTG pulse skip enable */
-	if (!(reg & OTG_EN_BIT))
+	disabled = !!chip->otg_pulse_skip_dis;
+	pr_smb(PR_STATUS, "%s pulse skip, reason %d\n",
+			disable ? "disabling" : "enabling", reason);
+	if (disable)
+		chip->otg_pulse_skip_dis |= reason;
+	else
+		chip->otg_pulse_skip_dis &= ~reason;
+	if (disabled == !!chip->otg_pulse_skip_dis)
 		return 0;
+	disabled = !!chip->otg_pulse_skip_dis;
 
 	rc = smbchg_sec_masked_write(chip, chip->otg_base + OTG_TRIM6,
-			TR_ENB_SKIP_BIT, enable ? TR_ENB_SKIP_BIT : 0);
+			TR_ENB_SKIP_BIT, disabled ? TR_ENB_SKIP_BIT : 0);
 	if (rc < 0) {
 		dev_err(chip->dev,
 			"Couldn't %s otg pulse skip rc = %d\n",
-			enable ? "enable" : "disable", rc);
+			disabled ? "disable" : "enable", rc);
 		return rc;
 	}
-	chip->otg_pulse_skip_en = enable;
+	pr_smb(PR_STATUS, "%s pulse skip\n", disabled ? "disabled" : "enabled");
 	return 0;
 }
 
@@ -3078,7 +3081,8 @@ static int smbchg_battery_set_property(struct power_supply *psy,
 					msecs_to_jiffies(0));
 		break;
 	case POWER_SUPPLY_PROP_FLASH_ACTIVE:
-		rc = smbchg_otg_pulse_skip_enable(chip, val->intval);
+		rc = smbchg_otg_pulse_skip_disable(chip,
+				REASON_FLASH_ENABLED, val->intval);
 		break;
 	case POWER_SUPPLY_PROP_FORCE_TLIM:
 		rc = smbchg_force_tlim_en(chip, val->intval);
@@ -3235,7 +3239,7 @@ static int smbchg_battery_get_property(struct power_supply *psy,
 			       (get_prop_charge_full_design(chip) / 1000));
 		break;
 	case POWER_SUPPLY_PROP_FLASH_ACTIVE:
-		val->intval = chip->otg_pulse_skip_en;
+		val->intval = chip->otg_pulse_skip_dis;
 		break;
 	default:
 		return -EINVAL;
@@ -3749,6 +3753,9 @@ static int smbchg_otg_regulator_enable(struct regulator_dev *rdev)
 	struct smbchg_chip *chip = rdev_get_drvdata(rdev);
 
 	chip->otg_retries = 0;
+	smbchg_otg_pulse_skip_disable(chip, REASON_OTG_ENABLED, true);
+	/* sleep to make sure the pulse skip is actually disabled */
+	msleep(20);
 	rc = smbchg_masked_write(chip, chip->bat_if_base + CMD_CHG_REG,
 			OTG_EN_BIT, OTG_EN_BIT);
 	if (rc < 0)
@@ -3768,6 +3775,7 @@ static int smbchg_otg_regulator_disable(struct regulator_dev *rdev)
 			OTG_EN_BIT, 0);
 	if (rc < 0)
 		dev_err(chip->dev, "Couldn't disable OTG mode rc=%d\n", rc);
+	smbchg_otg_pulse_skip_disable(chip, REASON_OTG_ENABLED, false);
 	pr_smb(PR_STATUS, "Disabling OTG Boost\n");
 	return rc;
 }
-- 
2.11.0

