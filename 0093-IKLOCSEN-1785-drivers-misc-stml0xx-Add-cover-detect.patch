From 72f88d7dd7d5bb93aae8acbfb1a31abe3a9f3ad6 Mon Sep 17 00:00:00 2001
From: Daniel Moore <dtmoore@motorola.com>
Date: Fri, 7 Nov 2014 15:56:21 -0600
Subject: [PATCH 093/959] IKLOCSEN-1785:drivers:misc:stml0xx: Add cover detect

Add the cover detect implementation.

Change-Id: I892fe9facb8aca1d302ab2db392ee582144a0533
Signed-off-by: Dan Moore <dtmoore@motorola.com>
Reviewed-on: http://gerrit.mot.com/687440
SLTApproved: Slta Waiver <sltawvr@motorola.com>
Tested-by: Jira Key <jirakey@motorola.com>
Reviewed-by: Robert Wiegand <Robert.P.Wiegand@motorola.com>
Reviewed-by: Jason Jae Hyun Koh <jasonkoh@motorola.com>
Reviewed-by: Jeffrey Carlyle <jeff.carlyle@motorola.com>
Submit-Approved: Jira Key <jirakey@motorola.com>
---
 drivers/misc/stml0xx/stml0xx_core.c     | 1 +
 drivers/misc/stml0xx/stml0xx_wake_irq.c | 7 ++++---
 include/linux/stml0xx.h                 | 3 +++
 3 files changed, 8 insertions(+), 3 deletions(-)

diff --git a/drivers/misc/stml0xx/stml0xx_core.c b/drivers/misc/stml0xx/stml0xx_core.c
index 420d416f94f..441ab439f67 100644
--- a/drivers/misc/stml0xx/stml0xx_core.c
+++ b/drivers/misc/stml0xx/stml0xx_core.c
@@ -940,6 +940,7 @@ static int stml0xx_probe(struct spi_device *spi)
 	input_set_drvdata(ps_stml0xx->input_dev, ps_stml0xx);
 	input_set_capability(ps_stml0xx->input_dev, EV_KEY, KEY_POWER);
 	input_set_capability(ps_stml0xx->input_dev, EV_KEY, KEY_CAMERA);
+	input_set_capability(ps_stml0xx->input_dev, EV_SW, SW_LID);
 	if (pdata->headset_button_1_keycode > 0)
 		input_set_capability(ps_stml0xx->input_dev, EV_KEY, pdata->headset_button_1_keycode);
 	if (pdata->headset_button_2_keycode > 0)
diff --git a/drivers/misc/stml0xx/stml0xx_wake_irq.c b/drivers/misc/stml0xx/stml0xx_wake_irq.c
index 0502f4d5622..262130014cc 100644
--- a/drivers/misc/stml0xx/stml0xx_wake_irq.c
+++ b/drivers/misc/stml0xx/stml0xx_wake_irq.c
@@ -201,14 +201,15 @@ void stml0xx_irq_wake_work_func(struct work_struct *work)
 			goto EXIT;
 		}
 
-		state = buf[COVER_STATE];
-		if (state > 0)
+		if (buf[COVER_STATE] == STML0XX_HALL_NORTH)
 			state = 1;
+		else
+			state = 0;
 
 		input_report_switch(ps_stml0xx->input_dev, SW_LID, state);
 		input_sync(ps_stml0xx->input_dev);
 
-		dev_dbg(&stml0xx_misc_data->spi->dev,
+		dev_err(&stml0xx_misc_data->spi->dev,
 			"Cover status: %d", state);
 	}
 	if (irq_status & M_HEADSET) {
diff --git a/include/linux/stml0xx.h b/include/linux/stml0xx.h
index 9add80bba21..df63c6c2547 100644
--- a/include/linux/stml0xx.h
+++ b/include/linux/stml0xx.h
@@ -526,6 +526,9 @@ struct stm_response {
 #define STM32_TO_HOST(x) ((short) be32_to_cpu( \
 		*((u32 *) (stml0xx_readbuff+(x)))))
 
+#define STML0XX_HALL_SOUTH 1
+#define STML0XX_HALL_NORTH 2
+
 struct stml0xx_platform_data {
 	int (*init) (void);
 	void (*exit) (void);
-- 
2.11.0

